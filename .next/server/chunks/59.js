"use strict";exports.id=59,exports.ids=[59],exports.modules={8846:(g,e,t)=>{t.d(e,{RN:()=>b,_I:()=>Z,m7:()=>d,m8:()=>s,q4:()=>a,uf:()=>C});var I=t(3831),l=t(2615),n=t(7883),c=t(4435),i=t(396);let o=[];function s(g){let e=g.defaultIntegrations||[],t=g.integrations;e.forEach(g=>{g.isDefaultInstance=!0});let l=function(g){let e={};return g.forEach(g=>{let{name:t}=g,I=e[t];I&&!I.isDefaultInstance&&g.isDefaultInstance||(e[t]=g)}),Object.keys(e).map(g=>e[g])}(Array.isArray(t)?[...e,...t]:"function"==typeof t?(0,I.lE)(t(e)):e),n=function(g,e){for(let t=0;t<g.length;t++)if(!0===e(g[t]))return t;return -1}(l,g=>"Debug"===g.name);if(-1!==n){let[g]=l.splice(n,1);l.push(g)}return l}function a(g,e){let t={};return e.forEach(e=>{e&&d(g,e,t)}),t}function C(g,e){for(let t of e)t&&t.afterAllSetup&&t.afterAllSetup(g)}function d(g,e,t){if(t[e.name]){n.X&&l.kg.log(`Integration skipped because it was already installed: ${e.name}`);return}if(t[e.name]=e,-1===o.indexOf(e.name)&&(e.setupOnce(c.cc,i.Gd),o.push(e.name)),e.setup&&"function"==typeof e.setup&&e.setup(g),g.on&&"function"==typeof e.preprocessEvent){let t=e.preprocessEvent.bind(e);g.on("preprocessEvent",(e,I)=>t(e,I,g))}if(g.addEventProcessor&&"function"==typeof e.processEvent){let t=e.processEvent.bind(e),I=Object.assign((e,I)=>t(e,I,g),{id:e.name});g.addEventProcessor(I)}n.X&&l.kg.log(`Integration installed: ${e.name}`)}function b(g,e){return Object.assign(function(...g){return e(...g)},{id:g})}function Z(g){return g}},4339:(g,e,t)=>{t.d(e,{yn:()=>r,HN:()=>Z,I1:()=>u,GK:()=>b});var I=t(4340),l=t(2615),n=t(1491),c=t(7883),i=t(396),o=t(877),s=t(3915),a=t(7676),C=t(3644),d=t(6552);function b(g,e){let t=function(g){if(g.startTime){let e={...g};return e.startTimestamp=(0,o.$k)(g.startTime),delete e.startTime,e}return g}(g);return(0,i.Ok)(()=>(0,a.$e)(g.scope,I=>{let l=(0,i.Gd)(),c=I.getSpan(),a=g.onlyIfParent&&!c?void 0:function(g,{parentSpan:e,spanContext:t,forceTransaction:I,scope:l}){var c;let a;if(!(0,d.z)())return;let C=(0,i.aF)();if(e&&!I)a=e.startChild(t);else if(e){let I=(0,s.j)(e),{traceId:l,spanId:n}=e.spanContext(),c=(0,o.Tt)(e);a=g.startTransaction({traceId:l,parentSpanId:n,parentSampled:c,...t,metadata:{dynamicSamplingContext:I,...t.metadata}})}else{let{traceId:e,dsc:I,parentSpanId:n,sampled:c}={...C.getPropagationContext(),...l.getPropagationContext()};a=g.startTransaction({traceId:e,parentSpanId:n,parentSampled:c,...t,metadata:{dynamicSamplingContext:I,...t.metadata}})}return l.setSpan(a),(c=a)&&((0,n.xp)(c,m,C),(0,n.xp)(c,G,l)),a}(l,{parentSpan:c,spanContext:t,forceTransaction:g.forceTransaction,scope:I});return function(g,e,t=()=>{}){var I;let l;try{l=g()}catch(g){throw e(g),t(),g}return I=l,(0,C.J8)(I)?I.then(g=>(t(),g),g=>{throw e(g),t(),g}):(t(),I)}(()=>e(a),()=>{if(a){let{status:g}=(0,o.XU)(a);g&&"ok"!==g||a.setStatus("internal_error")}},()=>a&&a.end())}))}function Z(){return(0,a.nZ)().getSpan()}let r=({sentryTrace:g,baggage:e},t)=>{let o=(0,a.nZ)(),{traceparentData:s,dynamicSamplingContext:C,propagationContext:d}=(0,I.KA)(g,e);o.setPropagationContext(d),c.X&&s&&l.kg.log(`[Tracing] Continuing trace ${s.traceId}.`);let b={...s,metadata:(0,n.Jr)({dynamicSamplingContext:C})};return t?(0,i.Ok)(()=>t(b)):b},G="_sentryScope",m="_sentryIsolationScope";function u(g){return{scope:g[G],isolationScope:g[m]}}},6552:(g,e,t)=>{t.d(e,{z:()=>l});var I=t(7676);function l(g){if("boolean"==typeof __SENTRY_TRACING__&&!__SENTRY_TRACING__)return!1;let e=(0,I.s3)(),t=g||e&&e.getOptions();return!!t&&(t.enableTracing||"tracesSampleRate"in t||"tracesSampler"in t)}},59:(g,e,t)=>{let I,l,n,c;t.d(e,{S1:()=>Ig});var i,o,s={};t.r(s),t.d(s,{FunctionToString:()=>gn,InboundFilters:()=>gC,LinkedErrors:()=>gA});var a={};t.r(a),t.d(a,{Anr:()=>eD.q,Console:()=>gK,Context:()=>eo,ContextLines:()=>g6,Hapi:()=>e3,Http:()=>gj,LocalVariables:()=>eJ,Modules:()=>g1,OnUncaughtException:()=>gq,OnUnhandledRejection:()=>g2,RequestData:()=>eR,Spotlight:()=>eP,Undici:()=>eU});var C={};t.r(C),t.d(C,{Apollo:()=>e8,Express:()=>e6,GraphQL:()=>tt,Mongo:()=>tn,Mysql:()=>tc,Postgres:()=>ti,Prisma:()=>to});var d=t(2615),b=t(7883),Z=t(396),r=t(877),G=t(3856),m=t(7802),u=t(2451);let B={},A={};function h(g,e){B[g]=B[g]||[],B[g].push(e)}function p(g,e){A[g]||(e(),A[g]=!0)}function W(g,e){let t=g&&B[g];if(t)for(let I of t)try{I(e)}catch(e){m.X&&d.kg.error(`Error while triggering instrumentation handler.
Type: ${g}
Name: ${(0,u.$P)(I)}
Error:`,e)}}let V=null;function y(){V=G.GLOBAL_OBJ.onerror,G.GLOBAL_OBJ.onerror=function(g,e,t,I,l){return W("error",{column:I,error:l,line:t,msg:g,url:e}),!!V&&!V.__SENTRY_LOADER__&&V.apply(this,arguments)},G.GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__=!0}let H=null;function R(){H=G.GLOBAL_OBJ.onunhandledrejection,G.GLOBAL_OBJ.onunhandledrejection=function(g){return W("unhandledrejection",g),!H||!!H.__SENTRY_LOADER__||H.apply(this,arguments)},G.GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__=!0}function X(g){return(g||(0,Z.Gd)()).getScope().getTransaction()}let Y=!1;function v(){let g=X();if(g){let e="internal_error";b.X&&d.kg.log(`[Tracing] Transaction: ${e} -> Global error occured`),g.setStatus(e)}}v.tag="sentry_tracingErrorCallback";var S=t(3644);let N="sentry.source",K="sentry.sample_rate",F="sentry.op",J="sentry.origin";var w=t(6552),U=t(1491),k=t(4339);function z(g){return I?I.get(g):void 0}function f(g){let e=z(g);if(!e)return;let t={};for(let[,[g,I]]of e)t[g]||(t[g]=[]),t[g].push((0,U.Jr)(I));return t}var x=t(3915),L=t(3831),Q=t(6400),E=t(2513);function T(g,e){g.setTag("http.status_code",String(e)),g.setData("http.response.status_code",e);let t=function(g){if(g<400&&g>=100)return"ok";if(g>=400&&g<500)switch(g){case 401:return"unauthenticated";case 403:return"permission_denied";case 404:return"not_found";case 409:return"already_exists";case 413:return"failed_precondition";case 429:return"resource_exhausted";default:return"invalid_argument"}if(g>=500&&g<600)switch(g){case 501:return"unimplemented";case 503:return"unavailable";case 504:return"deadline_exceeded";default:return"internal_error"}return"unknown_error"}(e);"unknown_error"!==t&&g.setStatus(t)}!function(g){g.Ok="ok",g.DeadlineExceeded="deadline_exceeded",g.Unauthenticated="unauthenticated",g.PermissionDenied="permission_denied",g.NotFound="not_found",g.ResourceExhausted="resource_exhausted",g.InvalidArgument="invalid_argument",g.Unimplemented="unimplemented",g.Unavailable="unavailable",g.InternalError="internal_error",g.UnknownError="unknown_error",g.Cancelled="cancelled",g.AlreadyExists="already_exists",g.FailedPrecondition="failed_precondition",g.Aborted="aborted",g.OutOfRange="out_of_range",g.DataLoss="data_loss"}(i||(i={}));class _{constructor(g=1e3){this._maxlen=g,this.spans=[]}add(g){this.spans.length>this._maxlen?g.spanRecorder=void 0:this.spans.push(g)}}class j{constructor(g={}){this._traceId=g.traceId||(0,L.DM)(),this._spanId=g.spanId||(0,L.DM)().substring(16),this._startTime=g.startTimestamp||(0,Q.ph)(),this.tags=g.tags?{...g.tags}:{},this.data=g.data?{...g.data}:{},this.instrumenter=g.instrumenter||"sentry",this._attributes={},this.setAttributes({[J]:g.origin||"manual",[F]:g.op,...g.attributes}),this._name=g.name||g.description,g.parentSpanId&&(this._parentSpanId=g.parentSpanId),"sampled"in g&&(this._sampled=g.sampled),g.status&&(this._status=g.status),g.endTimestamp&&(this._endTime=g.endTimestamp),g.exclusiveTime&&(this._exclusiveTime=g.exclusiveTime),this._measurements=g.measurements?{...g.measurements}:{}}get name(){return this._name||""}set name(g){this.updateName(g)}get description(){return this._name}set description(g){this._name=g}get traceId(){return this._traceId}set traceId(g){this._traceId=g}get spanId(){return this._spanId}set spanId(g){this._spanId=g}set parentSpanId(g){this._parentSpanId=g}get parentSpanId(){return this._parentSpanId}get sampled(){return this._sampled}set sampled(g){this._sampled=g}get attributes(){return this._attributes}set attributes(g){this._attributes=g}get startTimestamp(){return this._startTime}set startTimestamp(g){this._startTime=g}get endTimestamp(){return this._endTime}set endTimestamp(g){this._endTime=g}get status(){return this._status}set status(g){this._status=g}get op(){return this._attributes[F]}set op(g){this.setAttribute(F,g)}get origin(){return this._attributes[J]}set origin(g){this.setAttribute(J,g)}spanContext(){let{_spanId:g,_traceId:e,_sampled:t}=this;return{spanId:g,traceId:e,traceFlags:t?r.i0:r.ve}}startChild(g){let e=new j({...g,parentSpanId:this._spanId,sampled:this._sampled,traceId:this._traceId});e.spanRecorder=this.spanRecorder,e.spanRecorder&&e.spanRecorder.add(e);let t=(0,E.G)(this);if(e.transaction=t,b.X&&t){let I=g&&g.op||"< unknown op >",l=(0,r.XU)(e).description||"< unknown name >",n=t.spanContext().spanId,c=`[Tracing] Starting '${I}' span on transaction '${l}' (${n}).`;d.kg.log(c),this._logMessage=c}return e}setTag(g,e){return this.tags={...this.tags,[g]:e},this}setData(g,e){return this.data={...this.data,[g]:e},this}setAttribute(g,e){void 0===e?delete this._attributes[g]:this._attributes[g]=e}setAttributes(g){Object.keys(g).forEach(e=>this.setAttribute(e,g[e]))}setStatus(g){return this._status=g,this}setHttpStatus(g){return T(this,g),this}setName(g){this.updateName(g)}updateName(g){return this._name=g,this}isSuccess(){return"ok"===this._status}finish(g){return this.end(g)}end(g){if(this._endTime)return;let e=(0,E.G)(this);if(b.X&&e&&e.spanContext().spanId!==this._spanId){let g=this._logMessage;g&&d.kg.log(g.replace("Starting","Finishing"))}this._endTime=(0,r.$k)(g)}toTraceparent(){return(0,r.Hb)(this)}toContext(){return(0,U.Jr)({data:this._getData(),description:this._name,endTimestamp:this._endTime,op:this.op,parentSpanId:this._parentSpanId,sampled:this._sampled,spanId:this._spanId,startTimestamp:this._startTime,status:this._status,tags:this.tags,traceId:this._traceId})}updateWithContext(g){return this.data=g.data||{},this._name=g.name||g.description,this._endTime=g.endTimestamp,this.op=g.op,this._parentSpanId=g.parentSpanId,this._sampled=g.sampled,this._spanId=g.spanId||this._spanId,this._startTime=g.startTimestamp||this._startTime,this._status=g.status,this.tags=g.tags||{},this._traceId=g.traceId||this._traceId,this}getTraceContext(){return(0,r.wy)(this)}getSpanJSON(){return(0,U.Jr)({data:this._getData(),description:this._name,op:this._attributes[F],parent_span_id:this._parentSpanId,span_id:this._spanId,start_timestamp:this._startTime,status:this._status,tags:Object.keys(this.tags).length>0?this.tags:void 0,timestamp:this._endTime,trace_id:this._traceId,origin:this._attributes[J],_metrics_summary:f(this),profile_id:this._attributes.profile_id,exclusive_time:this._exclusiveTime,measurements:Object.keys(this._measurements).length>0?this._measurements:void 0})}isRecording(){return!this._endTime&&!!this._sampled}toJSON(){return this.getSpanJSON()}_getData(){let{data:g,_attributes:e}=this,t=Object.keys(g).length>0,I=Object.keys(e).length>0;return t||I?t&&I?{...g,...e}:t?g:e:void 0}}class M extends j{constructor(g,e){super(g),this._contexts={},this._hub=e||(0,Z.Gd)(),this._name=g.name||"",this._metadata={...g.metadata},this._trimEnd=g.trimEnd,this.transaction=this;let t=this._metadata.dynamicSamplingContext;t&&(this._frozenDynamicSamplingContext={...t})}get name(){return this._name}set name(g){this.setName(g)}get metadata(){return{source:"custom",spanMetadata:{},...this._metadata,...this._attributes[N]&&{source:this._attributes[N]},...this._attributes[K]&&{sampleRate:this._attributes[K]}}}set metadata(g){this._metadata=g}setName(g,e="custom"){this._name=g,this.setAttribute(N,e)}updateName(g){return this._name=g,this}initSpanRecorder(g=1e3){this.spanRecorder||(this.spanRecorder=new _(g)),this.spanRecorder.add(this)}setContext(g,e){null===e?delete this._contexts[g]:this._contexts[g]=e}setMeasurement(g,e,t=""){this._measurements[g]={value:e,unit:t}}setMetadata(g){this._metadata={...this._metadata,...g}}end(g){let e=(0,r.$k)(g),t=this._finishTransaction(e);if(t)return this._hub.captureEvent(t)}toContext(){let g=super.toContext();return(0,U.Jr)({...g,name:this._name,trimEnd:this._trimEnd})}updateWithContext(g){return super.updateWithContext(g),this._name=g.name||"",this._trimEnd=g.trimEnd,this}getDynamicSamplingContext(){return(0,x.j)(this)}setHub(g){this._hub=g}getProfileId(){if(void 0!==this._contexts&&void 0!==this._contexts.profile)return this._contexts.profile.profile_id}_finishTransaction(g){if(void 0!==this._endTime)return;this._name||(b.X&&d.kg.warn("Transaction has no name, falling back to `<unlabeled transaction>`."),this._name="<unlabeled transaction>"),super.end(g);let e=this._hub.getClient();if(e&&e.emit&&e.emit("finishTransaction",this),!0!==this._sampled){b.X&&d.kg.log("[Tracing] Discarding transaction because its trace was not chosen to be sampled."),e&&e.recordDroppedEvent("sample_rate","transaction");return}let t=this.spanRecorder?this.spanRecorder.spans.filter(g=>g!==this&&(0,r.XU)(g).timestamp):[];if(this._trimEnd&&t.length>0){let g=t.map(g=>(0,r.XU)(g).timestamp).filter(Boolean);this._endTime=g.reduce((g,e)=>g>e?g:e)}let{scope:I,isolationScope:l}=(0,k.I1)(this),{metadata:n}=this,{source:c}=n,i={contexts:{...this._contexts,trace:(0,r.wy)(this)},spans:t,start_timestamp:this._startTime,tags:this.tags,timestamp:this._endTime,transaction:this._name,type:"transaction",sdkProcessingMetadata:{...n,capturedSpanScope:I,capturedSpanIsolationScope:l,...(0,U.Jr)({dynamicSamplingContext:(0,x.j)(this)})},_metrics_summary:f(this),...c&&{transaction_info:{source:c}}};return Object.keys(this._measurements).length>0&&(b.X&&d.kg.log("[Measurements] Adding measurements to transaction",JSON.stringify(this._measurements,void 0,2)),i.measurements=this._measurements),b.X&&d.kg.log(`[Tracing] Finishing ${this.op} transaction: ${this._name}.`),i}}function O(){let g=this.getScope().getSpan();return g?{"sentry-trace":(0,r.Hb)(g)}:{}}function P(g,e){var t,I,l;let n;let c=this.getClient(),i=c&&c.getOptions()||{},o=i.instrumenter||"sentry",s=g.instrumenter||"sentry";o!==s&&(b.X&&d.kg.error(`A transaction was started with instrumenter=\`${s}\`, but the SDK is configured with the \`${o}\` instrumenter.
The transaction will not be sampled. Please use the ${o} instrumentation to start transactions.`),g.sampled=!1);let a=new M(g,this);return t=a,I={name:g.name,parentSampled:g.parentSampled,transactionContext:g,attributes:{...g.data,...g.attributes},...e},((0,w.z)(i)?void 0!==t.sampled?t.setAttribute(K,Number(t.sampled)):("function"==typeof i.tracesSampler?(n=i.tracesSampler(I),t.setAttribute(K,Number(n))):void 0!==I.parentSampled?n=I.parentSampled:void 0!==i.tracesSampleRate?(n=i.tracesSampleRate,t.setAttribute(K,Number(n))):(n=1,t.setAttribute(K,n)),l=n,(0,S.i2)(l)||!("number"==typeof l||"boolean"==typeof l)?(b.X&&d.kg.warn(`[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(l)} of type ${JSON.stringify(typeof l)}.`),1):(l<0||l>1)&&(b.X&&d.kg.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${l}.`),1))?(b.X&&d.kg.warn("[Tracing] Discarding transaction because of invalid sample rate."),t.sampled=!1):n?(t.sampled=Math.random()<n,t.sampled)?b.X&&d.kg.log(`[Tracing] starting ${t.op} transaction - ${(0,r.XU)(t).description}`):b.X&&d.kg.log(`[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(n)})`):(b.X&&d.kg.log(`[Tracing] Discarding transaction because ${"function"==typeof i.tracesSampler?"tracesSampler returned 0 or false":"a negative sampling decision was inherited or tracesSampleRate is set to 0"}`),t.sampled=!1):t.sampled=!1,a=t).isRecording()&&a.initSpanRecorder(i._experiments&&i._experiments.maxSpans),c&&c.emit&&c.emit("startTransaction",a),a}function D(){let g=(0,Z.cu)();g.__SENTRY__&&(g.__SENTRY__.extensions=g.__SENTRY__.extensions||{},g.__SENTRY__.extensions.startTransaction||(g.__SENTRY__.extensions.startTransaction=P),g.__SENTRY__.extensions.traceHeaders||(g.__SENTRY__.extensions.traceHeaders=O),Y||(Y=!0,function(g){let e="error";h(e,g),p(e,y)}(v),function(g){let e="unhandledrejection";h(e,g),p(e,R)}(v)))}var q=t(7801);function $(g,e,t=[e],I="npm"){let l=g._metadata||{};l.sdk||(l.sdk={name:`sentry.javascript.${e}`,packages:t.map(g=>({name:`${I}:@sentry/${g}`,version:q.J})),version:q.J}),g._metadata=l}var gg=t(7676),ge=t(8846);let gt="FunctionToString",gI=new WeakMap,gl=(0,ge._I)(()=>({name:gt,setupOnce(){l=Function.prototype.toString;try{Function.prototype.toString=function(...g){let e=(0,U.HK)(this),t=gI.has((0,gg.s3)())&&void 0!==e?e:this;return l.apply(t,g)}}catch(g){}},setup(g){gI.set(g,!0)}})),gn=(0,ge.RN)(gt,gl);var gc=t(5557);let gi=[/^Script error\.?$/,/^Javascript error: Script error\.? on line 0$/],go=[/^.*\/healthcheck$/,/^.*\/healthy$/,/^.*\/live$/,/^.*\/ready$/,/^.*\/heartbeat$/,/^.*\/health$/,/^.*\/healthz$/],gs="InboundFilters",ga=(0,ge._I)((g={})=>({name:gs,setupOnce(){},processEvent:(e,t,I)=>!function(g,e){var t;return e.ignoreInternal&&function(g){try{return"SentryError"===g.exception.values[0].type}catch(g){}return!1}(g)?(b.X&&d.kg.warn(`Event dropped due to being internal Sentry Error.
Event: ${(0,L.jH)(g)}`),!0):(t=e.ignoreErrors,!g.type&&t&&t.length&&(function(g){let e;let t=[];g.message&&t.push(g.message);try{e=g.exception.values[g.exception.values.length-1]}catch(g){}return e&&e.value&&(t.push(e.value),e.type&&t.push(`${e.type}: ${e.value}`)),b.X&&0===t.length&&d.kg.error(`Could not extract message for event ${(0,L.jH)(g)}`),t})(g).some(g=>(0,gc.U0)(g,t)))?(b.X&&d.kg.warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${(0,L.jH)(g)}`),!0):!function(g,e){if("transaction"!==g.type||!e||!e.length)return!1;let t=g.transaction;return!!t&&(0,gc.U0)(t,e)}(g,e.ignoreTransactions)?!function(g,e){if(!e||!e.length)return!1;let t=gd(g);return!!t&&(0,gc.U0)(t,e)}(g,e.denyUrls)?!function(g,e){if(!e||!e.length)return!0;let t=gd(g);return!t||(0,gc.U0)(t,e)}(g,e.allowUrls)&&(b.X&&d.kg.warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${(0,L.jH)(g)}.
Url: ${gd(g)}`),!0):(b.X&&d.kg.warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${(0,L.jH)(g)}.
Url: ${gd(g)}`),!0):(b.X&&d.kg.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${(0,L.jH)(g)}`),!0)}(e,function(g={},e={}){return{allowUrls:[...g.allowUrls||[],...e.allowUrls||[]],denyUrls:[...g.denyUrls||[],...e.denyUrls||[]],ignoreErrors:[...g.ignoreErrors||[],...e.ignoreErrors||[],...g.disableErrorDefaults?[]:gi],ignoreTransactions:[...g.ignoreTransactions||[],...e.ignoreTransactions||[],...g.disableTransactionDefaults?[]:go],ignoreInternal:void 0===g.ignoreInternal||g.ignoreInternal}}(g,I.getOptions()))?e:null})),gC=(0,ge.RN)(gs,ga);function gd(g){try{let e;try{e=g.exception.values[0].stacktrace.frames}catch(g){}return e?function(g=[]){for(let e=g.length-1;e>=0;e--){let t=g[e];if(t&&"<anonymous>"!==t.filename&&"[native code]"!==t.filename)return t.filename||null}return null}(e):null}catch(e){return b.X&&d.kg.error(`Cannot extract url for event ${(0,L.jH)(g)}`),null}}function gb(g,e){g.mechanism=g.mechanism||{type:"generic",handled:!0},g.mechanism={...g.mechanism,..."AggregateError"===g.type&&{is_exception_group:!0},exception_id:e}}function gZ(g,e,t,I){g.mechanism=g.mechanism||{type:"generic",handled:!0},g.mechanism={...g.mechanism,type:"chained",source:e,exception_id:t,parent_id:I}}var gr=t(6318);function gG(g,e){return g(e.stack||"",1)}function gm(g,e){let t={type:e.name||e.constructor.name,value:e.message},I=gG(g,e);return I.length&&(t.stacktrace={frames:I}),t}let gu="LinkedErrors",gB=(0,ge._I)((g={})=>{let e=g.limit||5,t=g.key||"cause";return{name:gu,setupOnce(){},preprocessEvent(g,I,l){let n=l.getOptions();!function(g,e,t=250,I,l,n,c){if(!n.exception||!n.exception.values||!c||!(0,S.V9)(c.originalException,Error))return;let i=n.exception.values.length>0?n.exception.values[n.exception.values.length-1]:void 0;i&&(n.exception.values=(function g(e,t,I,l,n,c,i,o){if(c.length>=I+1)return c;let s=[...c];if((0,S.V9)(l[n],Error)){gb(i,o);let c=e(t,l[n]),a=s.length;gZ(c,n,a,o),s=g(e,t,I,l[n],n,[c,...s],c,a)}return Array.isArray(l.errors)&&l.errors.forEach((l,c)=>{if((0,S.V9)(l,Error)){gb(i,o);let a=e(t,l),C=s.length;gZ(a,`errors[${c}]`,C,o),s=g(e,t,I,l,n,[a,...s],a,C)}}),s})(g,e,l,c.originalException,I,n.exception.values,i,0).map(g=>(g.value&&(g.value=(0,gc.$G)(g.value,t)),g)))}(gm,n.stackParser,n.maxValueLength,t,e,g,I)}}}),gA=(0,ge.RN)(gu,gB);var gh=t(1017);let gp=/^(\S+:\\|\/?)([\s\S]*?)((?:\.{1,2}|[^/\\]+?|)(\.[^./\\]*|))(?:[/\\]*)$/;function gW(g){let e=g.length>1024?`<truncated>${g.slice(-1024)}`:g,t=gp.exec(e);return t?t.slice(1):[]}function gV(...g){let e="",t=!1;for(let I=g.length-1;I>=-1&&!t;I--){let l=I>=0?g[I]:"/";l&&(e=`${l}/${e}`,t="/"===l.charAt(0))}return e=(function(g,e){let t=0;for(let e=g.length-1;e>=0;e--){let I=g[e];"."===I?g.splice(e,1):".."===I?(g.splice(e,1),t++):t&&(g.splice(e,1),t--)}if(e)for(;t--;t)g.unshift("..");return g})(e.split("/").filter(g=>!!g),!t).join("/"),(t?"/":"")+e||"."}function gy(g){let e=0;for(;e<g.length&&""===g[e];e++);let t=g.length-1;for(;t>=0&&""===g[t];t--);return e>t?[]:g.slice(e,t-e+1)}function gH(g){return g.replace(/^[A-Z]:/,"").replace(/\\/g,"/")}function gR(g=process.argv[1]?function(g){let e=gW(g),t=e[0],I=e[1];return t||I?(I&&(I=I.slice(0,I.length-1)),t+I):"."}(process.argv[1]):process.cwd(),e="\\"===gh.sep){let t=e?gH(g):g;return g=>{if(!g)return;let I=e?gH(g):g,{dir:l,base:n,ext:c}=gh.posix.parse(I);(".js"===c||".mjs"===c||".cjs"===c)&&(n=n.slice(0,-1*c.length)),l||(l=".");let i=l.lastIndexOf("/node_modules");if(i>-1)return`${l.slice(i+14).replace(/\//g,".")}:${n}`;if(l.startsWith(t)){let g=l.slice(t.length+1).replace(/\//g,".");return g&&(g+=":"),g+=n}return n}}var gX=t(3837);function gY(){"console"in G.GLOBAL_OBJ&&d.RU.forEach(function(g){g in G.GLOBAL_OBJ.console&&(0,U.hl)(G.GLOBAL_OBJ.console,g,function(e){return d.LD[g]=e,function(...e){W("console",{args:e,level:g});let t=d.LD[g];t&&t.apply(G.GLOBAL_OBJ.console,e)}})})}let gv=["fatal","error","warning","log","info","debug"],gS="Console",gN=(0,ge._I)(()=>({name:gS,setupOnce(){},setup(g){!function(g){let e="console";h(e,g),p(e,gY)}(({args:e,level:t})=>{if((0,gg.s3)()===g)(0,gg.n_)({category:"console",level:"warn"===t?"warning":gv.includes(t)?t:"log",message:gX.format.apply(void 0,e)},{input:[...e],level:t})})}})),gK=(0,ge.RN)(gS,gN);var gF=t(15);function gJ(g,e){let t=e&&void 0!==e.getClient?e.getClient():e,I=t&&t.getDsn(),l=t&&t.getOptions().tunnel;return!!I&&g.includes(I.host)||!!l&&gw(g)===gw(l)}function gw(g){return"/"===g[g.length-1]?g.slice(0,-1):g}class gU{constructor(g){this._maxSize=g,this._cache=new Map}get size(){return this._cache.size}get(g){let e=this._cache.get(g);if(void 0!==e)return this._cache.delete(g),this._cache.set(g,e),e}set(g,e){this._cache.size>=this._maxSize&&this._cache.delete(this._cache.keys().next().value),this._cache.set(g,e)}remove(g){let e=this._cache.get(g);return e&&this._cache.delete(g),e}clear(){this._cache.clear()}keys(){return Array.from(this._cache.keys())}values(){let g=[];return this._cache.forEach(e=>g.push(e)),g}}var gk=t(4340),gz=t(1821),gf=t(3914),gx=t(7310);function gL(g){let{protocol:e,hostname:t,port:I}=gT(g),l=g.pathname||"/",n=g.auth?function(g){let[e,t]=g.split(":");return`${e?"[Filtered]":""}:${t?"[Filtered]":""}@`}(g.auth):"";return`${e}//${n}${t}${I}${l}`}function gQ(g,e,t){if(!g)return g;let[I,l]=g.split(" ");return e.host&&!e.protocol&&(e.protocol=(0,gF.x)([t,"optionalAccess",g=>g.agent,"optionalAccess",g=>g.protocol]),l=gL(e)),(0,gF.x)([l,"optionalAccess",g=>g.startsWith,"call",g=>g("///")])&&(l=l.slice(2)),`${I} ${l}`}function gE(g){let e={protocol:g.protocol,hostname:"string"==typeof g.hostname&&g.hostname.startsWith("[")?g.hostname.slice(1,-1):g.hostname,hash:g.hash,search:g.search,pathname:g.pathname,path:`${g.pathname||""}${g.search||""}`,href:g.href};return""!==g.port&&(e.port=Number(g.port)),(g.username||g.password)&&(e.auth=`${g.username}:${g.password}`),e}function gT(g){let e=g.protocol||"",t=g.hostname||g.host||"",I=!g.port||80===g.port||443===g.port||/^(.*):(\d+)$/.test(t)?"":`:${g.port}`;return{protocol:e,hostname:t,port:I}}let g_=(0,ge._I)((g={})=>{let{breadcrumbs:e,tracing:t,shouldCreateSpanForRequest:I}=g;return new gj({breadcrumbs:e,tracing:!1!==t&&(0,U.Jr)({enableIfHasTracingEnabled:!0!==t||void 0,shouldCreateSpanForRequest:I})})});class gj{static __initStatic(){this.id="Http"}__init(){this.name=gj.id}constructor(g={}){gj.prototype.__init.call(this),this._breadcrumbs=void 0===g.breadcrumbs||g.breadcrumbs,this._tracing=g.tracing?!0===g.tracing?{}:g.tracing:void 0}setupOnce(g,e){var I,l;let n=(0,gF.x)([e,"call",g=>g(),"access",g=>g.getClient,"call",g=>g(),"optionalAccess",g=>g.getOptions,"call",g=>g()]),c=void 0!==(I=this._tracing)&&(!I.enableIfHasTracingEnabled||(0,w.z)(n));if(!this._breadcrumbs&&!c||n&&"sentry"!==n.instrumenter)return;let i=(l=this._tracing,c?(0,gF.x)([l,"optionalAccess",g=>g.shouldCreateSpanForRequest])||(0,gF.x)([n,"optionalAccess",g=>g.shouldCreateSpanForRequest]):()=>!1),o=(0,gF.x)([n,"optionalAccess",g=>g.tracePropagationTargets])||(0,gF.x)([this,"access",g=>g._tracing,"optionalAccess",g=>g.tracePropagationTargets]),s=t(3685),a=gM(s,this._breadcrumbs,i,o);if((0,U.hl)(s,"get",a),(0,U.hl)(s,"request",a),gf.V.major>8){let g=t(5687),e=gM(g,this._breadcrumbs,i,o);(0,U.hl)(g,"get",e),(0,U.hl)(g,"request",e)}}}function gM(g,e,t,I){let l=new gU(100),n=new gU(100),c=g=>{if(void 0===t)return!0;let e=l.get(g);if(void 0!==e)return e;let I=t(g);return l.set(g,I),I},i=g=>{if(void 0===I)return!0;let e=n.get(g);if(void 0!==e)return e;let t=(0,gc.U0)(g,I);return n.set(g,t),t};function o(g,e,t,I){(0,Z.Gd)().getIntegration(gj)&&(0,gg.n_)({category:"http",data:{status_code:I&&I.statusCode,...e},type:"http"},{event:g,request:t,response:I})}return function(t){return function(...I){let l=function(g,e){let t,I;if("function"==typeof e[e.length-1]&&(t=e.pop()),"string"==typeof e[0])I=gE(new gx.URL(e[0]));else if(e[0]instanceof gx.URL)I=gE(e[0]);else{I=e[0];try{let g=new gx.URL(I.path||"",`${I.protocol||"http:"}//${I.hostname}`);I={pathname:g.pathname,search:g.search,hash:g.hash,...I}}catch(g){}}return(2===e.length&&(I={...I,...e[1]}),void 0===I.protocol&&(gf.V.major>8?I.protocol=(0,gF.x)([(0,gF.x)([g,"optionalAccess",g=>g.globalAgent]),"optionalAccess",g=>g.protocol])||(0,gF.x)([I.agent,"optionalAccess",g=>g.protocol])||(0,gF.x)([I._defaultAgent,"optionalAccess",g=>g.protocol]):I.protocol=(0,gF.x)([I.agent,"optionalAccess",g=>g.protocol])||(0,gF.x)([I._defaultAgent,"optionalAccess",g=>g.protocol])||(0,gF.x)([(0,gF.x)([g,"optionalAccess",g=>g.globalAgent]),"optionalAccess",g=>g.protocol])),t)?[I,t]:[I]}(g,I),n=l[0],s=function(g){let{protocol:e,hostname:t,port:I}=gT(g),l=g.path?g.path:"/";return`${e}//${t}${I}${l}`}(n),a=gL(n),C=(0,gg.s3)();if(gJ(a,C))return t.apply(g,l);let d=(0,gg.nZ)(),b=(0,Z.aF)(),G=(0,k.HN)(),m=function(g,e){let t={url:g,"http.method":e.method||"GET"};return e.hash&&(t["http.fragment"]=e.hash.substring(1)),e.search&&(t["http.query"]=e.search.substring(1)),t}(a,n),u=c(s)?(0,gF.x)([G,"optionalAccess",g=>g.startChild,"call",g=>g({op:"http.client",origin:"auto.http.node.http",description:`${m["http.method"]} ${m.url}`,data:m})]):void 0;if(C&&i(s)){let{traceId:g,spanId:e,sampled:t,dsc:I}={...b.getPropagationContext(),...d.getPropagationContext()};(function(g,e,t,I){if(!(g.headers||{})["sentry-trace"])g.headers={...g.headers,"sentry-trace":t,...I&&I.length>0&&{baggage:g.headers&&g.headers.baggage?I?Array.isArray(g.headers.baggage)?[...g.headers.baggage,I]:[g.headers.baggage,I]:g.headers.baggage:I}}})(n,0,u?(0,r.Hb)(u):(0,gk.$p)(g,e,t),(0,gz.IQ)(I||(u?(0,x.j)(u):(0,x._)(g,C,d))))}return t.apply(g,l).once("response",function(g){e&&o("response",m,this,g),u&&(g.statusCode&&T(u,g.statusCode),u.updateName(gQ((0,r.XU)(u).description||"",n,this)||""),u.end())}).once("error",function(){e&&o("error",m,this),u&&(T(u,500),u.updateName(gQ((0,r.XU)(u).description||"",n,this)||""),u.end())})}}}function gO(g){(0,d.Cf)(()=>{console.error(g)});let e=(0,gg.s3)();void 0===e&&global.process.exit(1);let t=e.getOptions(),I=t&&t.shutdownTimeout&&t.shutdownTimeout>0&&t.shutdownTimeout||2e3;e.close(I).then(g=>{global.process.exit(1)},g=>{})}gj.__initStatic();let gP="OnUncaughtException",gD=(0,ge._I)((g={})=>{let e={exitEvenIfOtherHandlersAreRegistered:!0,...g};return{name:gP,setupOnce(){},setup(g){global.process.on("uncaughtException",function(g,e){let t;let I=!1,l=!1,n=!1,c=g.getOptions();return Object.assign(i=>{let o=gO;e.onFatalError?o=e.onFatalError:c.onFatalError&&(o=c.onFatalError);let s=global.process.listeners("uncaughtException").reduce((g,e)=>"domainUncaughtExceptionClear"===e.name||e.tag&&"sentry_tracingErrorCallback"===e.tag||e._errorHandler?g:g+1,0),a=e.exitEvenIfOtherHandlersAreRegistered||0===s;I?a&&(n?gO(i):l||(l=!0,setTimeout(()=>{n||(n=!0,o(t,i))},2e3))):(t=i,I=!0,(0,gg.s3)()===g&&(0,gg.Tb)(i,{originalException:i,captureContext:{level:"fatal"},mechanism:{handled:!1,type:"onuncaughtexception"}}),!n&&a&&(n=!0,o(i)))},{_errorHandler:!0})}(g,e))}}}),gq=(0,ge.RN)(gP,gD),g$="OnUnhandledRejection",g0=(0,ge._I)((g={})=>{let e=g.mode||"warn";return{name:g$,setupOnce(){},setup(g){var t;global.process.on("unhandledRejection",(t={mode:e},function(e,I){(0,gg.s3)()===g&&((0,gg.Tb)(e,{originalException:I,captureContext:{extra:{unhandledPromiseRejection:!0}},mechanism:{handled:!1,type:"onunhandledrejection"}}),function(g,e){let t="This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason:";"warn"===e.mode?(0,d.Cf)(()=>{console.warn(t),console.error(g&&g.stack?g.stack:g)}):"strict"===e.mode&&((0,d.Cf)(()=>{console.warn(t)}),gO(g))}(e,t))}))}}}),g2=(0,ge.RN)(g$,g0);var g9=t(7147);let g5="Modules",g3=(0,ge._I)(()=>({name:g5,setupOnce(){},processEvent:g=>(g.modules={...g.modules,...(n||(n=function(){let g=t.c[t.s]&&t.c[t.s].paths||[],e=function(){try{return t.c?Object.keys(t.c):[]}catch(g){return[]}}(),I={},l={};return e.forEach(e=>{let t=e,n=()=>{let e=t;if(!(t=(0,gh.dirname)(e))||e===t||l[e])return;if(0>g.indexOf(t))return n();let c=(0,gh.join)(e,"package.json");if(l[e]=!0,!(0,g9.existsSync)(c))return n();try{let g=JSON.parse((0,g9.readFileSync)(c,"utf8"));I[g.name]=g.version}catch(g){}};n()}),I}()),n)},g)})),g1=(0,ge.RN)(g5,g3),g4=new gU(100),g8="ContextLines",g7=(0,ge._I)((g={})=>{let e=void 0!==g.frameContextLines?g.frameContextLines:7;return{name:g8,setupOnce(){},processEvent:g=>eg(g,e)}}),g6=(0,ge.RN)(g8,g7);async function eg(g,e){let t={},I=[];if(e>0&&(0,gF.x)([g,"access",g=>g.exception,"optionalAccess",g=>g.values])){for(let e of g.exception.values)if((0,gF.x)([e,"access",g=>g.stacktrace,"optionalAccess",g=>g.frames]))for(let g=e.stacktrace.frames.length-1;g>=0;g--){let l=e.stacktrace.frames[g];!l.filename||t[l.filename]||g4.get(l.filename)||(I.push(ee(l.filename)),t[l.filename]=1)}}if(I.length>0&&await Promise.all(I),e>0&&(0,gF.x)([g,"access",g=>g.exception,"optionalAccess",g=>g.values]))for(let t of g.exception.values)t.stacktrace&&t.stacktrace.frames&&await function(g,e){for(let t of g)if(t.filename&&void 0===t.context_line){let g=g4.get(t.filename);if(g)try{(0,L.go)(g,t,e)}catch(g){}}}(t.stacktrace.frames,e);return g}async function ee(g){let e=g4.get(g);if(null===e)return null;if(void 0!==e)return e;let t=null;try{t=(await new Promise((e,t)=>{(0,g9.readFile)(g,"utf8",(g,I)=>{g?t(g):e(I)})})).split("\n")}catch(g){}return g4.set(g,t),t}var et=t(2081),eI=t(2037);let el=(0,gX.promisify)(g9.readFile),en=(0,gX.promisify)(g9.readdir),ec="Context",ei=(0,ge._I)((g={})=>{let e;let t={app:!0,os:!0,device:!0,culture:!0,cloudResource:!0,...g};async function I(g){var t;void 0===e&&(e=l());let I=(t=await e,(0,gF.x)([t,"optionalAccess",g=>g.app,"optionalAccess",g=>g.app_memory])&&(t.app.app_memory=process.memoryUsage().rss),(0,gF.x)([t,"optionalAccess",g=>g.device,"optionalAccess",g=>g.free_memory])&&(t.device.free_memory=eI.freemem()),t);return g.contexts={...g.contexts,app:{...I.app,...(0,gF.x)([g,"access",g=>g.contexts,"optionalAccess",g=>g.app])},os:{...I.os,...(0,gF.x)([g,"access",g=>g.contexts,"optionalAccess",g=>g.os])},device:{...I.device,...(0,gF.x)([g,"access",g=>g.contexts,"optionalAccess",g=>g.device])},culture:{...I.culture,...(0,gF.x)([g,"access",g=>g.contexts,"optionalAccess",g=>g.culture])},cloud_resource:{...I.cloud_resource,...(0,gF.x)([g,"access",g=>g.contexts,"optionalAccess",g=>g.cloud_resource])}},g}async function l(){let g={};if(t.os&&(g.os=await es()),t.app&&(g.app=function(){let g=process.memoryUsage().rss;return{app_start_time:new Date(Date.now()-1e3*process.uptime()).toISOString(),app_memory:g}}()),t.device&&(g.device=function(g){let e;let t={};try{e=eI.uptime&&eI.uptime()}catch(g){}if("number"==typeof e&&(t.boot_time=new Date(Date.now()-1e3*e).toISOString()),t.arch=eI.arch(),(!0===g||g.memory)&&(t.memory_size=eI.totalmem(),t.free_memory=eI.freemem()),!0===g||g.cpu){let g=eI.cpus();if(g&&g.length){let e=g[0];t.processor_count=g.length,t.cpu_description=e.model,t.processor_frequency=e.speed}}return t}(t.device)),t.culture){let e=function(){try{if("string"!=typeof process.versions.icu)return;let g=new Date(9e8),e=new Intl.DateTimeFormat("es",{month:"long"});if("enero"===e.format(g)){let g=Intl.DateTimeFormat().resolvedOptions();return{locale:g.locale,timezone:g.timeZone}}}catch(g){}}();e&&(g.culture=e)}return t.cloudResource&&(g.cloud_resource=function(){if(process.env.VERCEL)return{"cloud.provider":"vercel","cloud.region":process.env.VERCEL_REGION};if(process.env.AWS_REGION)return{"cloud.provider":"aws","cloud.region":process.env.AWS_REGION,"cloud.platform":process.env.AWS_EXECUTION_ENV};if(process.env.GCP_PROJECT)return{"cloud.provider":"gcp"};if(process.env.ALIYUN_REGION_ID)return{"cloud.provider":"alibaba_cloud","cloud.region":process.env.ALIYUN_REGION_ID};if(process.env.WEBSITE_SITE_NAME&&process.env.REGION_NAME)return{"cloud.provider":"azure","cloud.region":process.env.REGION_NAME};if(process.env.IBM_CLOUD_REGION)return{"cloud.provider":"ibm_cloud","cloud.region":process.env.IBM_CLOUD_REGION};if(process.env.TENCENTCLOUD_REGION)return{"cloud.provider":"tencent_cloud","cloud.region":process.env.TENCENTCLOUD_REGION,"cloud.account.id":process.env.TENCENTCLOUD_APPID,"cloud.availability_zone":process.env.TENCENTCLOUD_ZONE};else if(process.env.NETLIFY)return{"cloud.provider":"netlify"};else if(process.env.FLY_REGION)return{"cloud.provider":"fly.io","cloud.region":process.env.FLY_REGION};else if(process.env.DYNO)return{"cloud.provider":"heroku"};else return}()),g}return{name:ec,setupOnce(){},processEvent:g=>I(g)}}),eo=(0,ge.RN)(ec,ei);async function es(){let g=eI.platform();switch(g){case"darwin":return eZ();case"linux":return eG();default:return{name:ea[g]||g,version:eI.release()}}}let ea={aix:"IBM AIX",freebsd:"FreeBSD",openbsd:"OpenBSD",sunos:"SunOS",win32:"Windows"},eC=[{name:"fedora-release",distros:["Fedora"]},{name:"redhat-release",distros:["Red Hat Linux","Centos"]},{name:"redhat_version",distros:["Red Hat Linux"]},{name:"SuSE-release",distros:["SUSE Linux"]},{name:"lsb-release",distros:["Ubuntu Linux","Arch Linux"]},{name:"debian_version",distros:["Debian"]},{name:"debian_release",distros:["Debian"]},{name:"arch-release",distros:["Arch Linux"]},{name:"gentoo-release",distros:["Gentoo Linux"]},{name:"novell-release",distros:["SUSE Linux"]},{name:"alpine-release",distros:["Alpine Linux"]}],ed={alpine:g=>g,arch:g=>eb(/distrib_release=(.*)/,g),centos:g=>eb(/release ([^ ]+)/,g),debian:g=>g,fedora:g=>eb(/release (..)/,g),mint:g=>eb(/distrib_release=(.*)/,g),red:g=>eb(/release ([^ ]+)/,g),suse:g=>eb(/VERSION = (.*)\n/,g),ubuntu:g=>eb(/distrib_release=(.*)/,g)};function eb(g,e){let t=g.exec(e);return t?t[1]:void 0}async function eZ(){let g={kernel_version:eI.release(),name:"Mac OS X",version:`10.${Number(eI.release().split(".")[0])-4}`};try{let e=await new Promise((g,e)=>{(0,et.execFile)("/usr/bin/sw_vers",(t,I)=>{if(t){e(t);return}g(I)})});g.name=eb(/^ProductName:\s+(.*)$/m,e),g.version=eb(/^ProductVersion:\s+(.*)$/m,e),g.build=eb(/^BuildVersion:\s+(.*)$/m,e)}catch(g){}return g}function er(g){return g.split(" ")[0].toLowerCase()}async function eG(){let g={kernel_version:eI.release(),name:"Linux"};try{let e=await en("/etc"),t=eC.find(g=>e.includes(g.name));if(!t)return g;let I=(0,gh.join)("/etc",t.name),l=(await el(I,{encoding:"utf-8"})).toLowerCase(),{distros:n}=t;g.name=n.find(g=>l.indexOf(er(g))>=0)||n[0];let c=er(g.name);g.version=ed[c](l)}catch(g){}return g}function em(g){return g.split(/[\?#]/,1)[0]}function eu(g){return g.split(/\\?\//).filter(g=>g.length>0&&","!==g).length}let eB={ip:!1,request:!0,transaction:!0,user:!0},eA=["cookies","data","headers","method","query_string","url"],eh=["id","username","email"];function ep(g,e={}){let t=g.method&&g.method.toUpperCase(),I="",l="url";e.customRoute||g.route?(I=e.customRoute||`${g.baseUrl||""}${g.route&&g.route.path}`,l="route"):(g.originalUrl||g.url)&&(I=em(g.originalUrl||g.url||""));let n="";return e.method&&t&&(n+=t),e.method&&e.path&&(n+=" "),e.path&&I&&(n+=I),[n,l]}function eW(g,e){let{include:t=eA,deps:I}=e||{},l={},n=g.headers||{},c=g.method,i=n.host||g.hostname||g.host||"<no host>",o="https"===g.protocol||g.socket&&g.socket.encrypted?"https":"http",s=g.originalUrl||g.url||"",a=s.startsWith(o)?s:`${o}://${i}${s}`;return t.forEach(e=>{switch(e){case"headers":l.headers=n,t.includes("cookies")||delete l.headers.cookie;break;case"method":l.method=c;break;case"url":l.url=a;break;case"cookies":l.cookies=g.cookies||n.cookie&&function(g){let e={},t=0;for(;t<g.length;){let I=g.indexOf("=",t);if(-1===I)break;let l=g.indexOf(";",t);if(-1===l)l=g.length;else if(l<I){t=g.lastIndexOf(";",I-1)+1;continue}let n=g.slice(t,I).trim();if(void 0===e[n]){let t=g.slice(I+1,l).trim();34===t.charCodeAt(0)&&(t=t.slice(1,-1));try{e[n]=-1!==t.indexOf("%")?decodeURIComponent(t):t}catch(g){e[n]=t}}t=l+1}return e}(n.cookie)||{};break;case"query_string":l.query_string=function(g,e){let t=g.originalUrl||g.url||"";if(t){t.startsWith("/")&&(t=`http://dogs.are.great${t}`);try{return g.query||"undefined"!=typeof URL&&new URL(t).search.slice(1)||e&&e.url&&e.url.parse(t).query||void 0}catch(g){return}}}(g,I);break;case"data":if("GET"===c||"HEAD"===c)break;void 0!==g.body&&(l.data=(0,S.HD)(g.body)?g.body:JSON.stringify((0,gr.Fv)(g.body)));break;default:({}).hasOwnProperty.call(g,e)&&(l[e]=g[e])}}),l}let eV={include:{cookies:!0,data:!0,headers:!0,ip:!1,query_string:!0,url:!0,user:{id:!0,username:!0,email:!0}},transactionNamingScheme:"methodPath"},ey="RequestData",eH=(0,ge._I)((g={})=>{let e={...eV,...g,include:{method:!0,...eV.include,...g.include,user:g.include&&"boolean"==typeof g.include.user?g.include.user:{...eV.include.user,...(g.include||{}).user}}};return{name:ey,setupOnce(){},processEvent(g,t,I){let{transactionNamingScheme:l}=e,{sdkProcessingMetadata:n={}}=g,c=n.request;if(!c)return g;let i=function(g,e,t){let I={...eB,...t&&t.include};if(I.request){let l=Array.isArray(I.request)?eW(e,{include:I.request,deps:t&&t.deps}):eW(e,{deps:t&&t.deps});g.request={...g.request,...l}}if(I.user){let t=e.user&&(0,S.PO)(e.user)?function(g,e){let t={};return(Array.isArray(e)?e:eh).forEach(e=>{g&&e in g&&(t[e]=g[e])}),t}(e.user,I.user):{};Object.keys(t).length&&(g.user={...g.user,...t})}if(I.ip){let t=e.ip||e.socket&&e.socket.remoteAddress;t&&(g.user={...g.user,ip_address:t})}return I.transaction&&!g.transaction&&(g.transaction=function(g,e){switch(e){case"path":return ep(g,{path:!0})[0];case"handler":return g.route&&g.route.stack&&g.route.stack[0]&&g.route.stack[0].name||"<anonymous>";default:{let e=g._reconstructedRoute?g._reconstructedRoute:void 0;return ep(g,{path:!0,method:!0,customRoute:e})[0]}}}(e,I.transaction)),g}(g,c,n.requestDataOptionsFromExpressHandler||n.requestDataOptionsFromGCPWrapper||function(g){let e;let{transactionNamingScheme:t,include:{ip:I,user:l,...n}}=g,c=[];for(let[g,e]of Object.entries(n))e&&c.push(g);if(void 0===l)e=!0;else if("boolean"==typeof l)e=l;else{let g=[];for(let[e,t]of Object.entries(l))t&&g.push(e);e=g}return{include:{ip:I,user:e,request:0!==c.length?c:void 0,transaction:t}}}(e));if("transaction"===g.type||"handler"===l)return i;let o=c._sentryTransaction;if(o){let g=(0,r.XU)(o).description||"",[e]=ep(c,{path:!0,method:"sentry.javascript.nextjs"===function(g){try{return g.getOptions()._metadata.sdk.name}catch(g){return}}(I)?g.startsWith("/api"):"path"!==l,customRoute:g});i.transaction=e}return i}}}),eR=(0,ge.RN)(ey,eH);function eX(g){return void 0!==g&&(0===g.length||"?"===g||"<anonymous>"===g)}function eY(g){if(void 0!==g)return g.slice(-10).reduce((g,e)=>`${g},${e.function},${e.lineno},${e.colno}`,"")}function ev(g){let e=[],t=!1;function I(I){e=[],t||(t=!0,g(I))}return e.push(I),{add:function(g){e.push(g)},next:function(g){let t=e.pop()||I;try{t(g)}catch(e){I(g)}}}}class eS{constructor(){let{Session:g}=t(1405);this._session=new g}configureAndConnect(g,e){this._session.connect(),this._session.on("Debugger.paused",e=>{g(e,()=>{this._session.post("Debugger.resume")})}),this._session.post("Debugger.enable"),this._session.post("Debugger.setPauseOnExceptions",{state:e?"all":"uncaught"})}setPauseOnExceptions(g){this._session.post("Debugger.setPauseOnExceptions",{state:g?"all":"uncaught"})}getLocalVariables(g,e){this._getProperties(g,g=>{let{add:t,next:I}=ev(e);for(let e of g)if((0,gF.x)([e,"optionalAccess",g=>g.value,"optionalAccess",g=>g.objectId])&&"Array"===(0,gF.x)([e,"optionalAccess",g=>g.value,"access",g=>g.className])){let g=e.value.objectId;t(t=>this._unrollArray(g,e.name,t,I))}else if((0,gF.x)([e,"optionalAccess",g=>g.value,"optionalAccess",g=>g.objectId])&&"Object"===(0,gF.x)([e,"optionalAccess",g=>g.value,"optionalAccess",g=>g.className])){let g=e.value.objectId;t(t=>this._unrollObject(g,e.name,t,I))}else((0,gF.x)([e,"optionalAccess",g=>g.value,"optionalAccess",g=>g.value])||(0,gF.x)([e,"optionalAccess",g=>g.value,"optionalAccess",g=>g.description]))&&t(g=>this._unrollOther(e,g,I));I({})})}_getProperties(g,e){this._session.post("Runtime.getProperties",{objectId:g,ownProperties:!0},(g,t)=>{g?e([]):e(t.result)})}_unrollArray(g,e,t,I){this._getProperties(g,g=>{t[e]=g.filter(g=>"length"!==g.name&&!isNaN(parseInt(g.name,10))).sort((g,e)=>parseInt(g.name,10)-parseInt(e.name,10)).map(g=>(0,gF.x)([g,"optionalAccess",g=>g.value,"optionalAccess",g=>g.value])),I(t)})}_unrollObject(g,e,t,I){this._getProperties(g,g=>{t[e]=g.map(g=>[g.name,(0,gF.x)([g,"optionalAccess",g=>g.value,"optionalAccess",g=>g.value])]).reduce((g,[e,t])=>(g[e]=t,g),{}),I(t)})}_unrollOther(g,e,t){(0,gF.x)([g,"optionalAccess",g=>g.value,"optionalAccess",g=>g.value])?e[g.name]=g.value.value:(0,gF.x)([g,"optionalAccess",g=>g.value,"optionalAccess",g=>g.description])&&"function"!==(0,gF.x)([g,"optionalAccess",g=>g.value,"optionalAccess",g=>g.type])&&(e[g.name]=`<${g.value.description}>`),t(e)}}function eN(){try{return new eS}catch(g){return}}let eK="LocalVariables",eF=(0,ge._I)((g={},e=eN())=>{let t;let I=new gU(20),l=!1;return{name:eK,setupOnce(){let n=(0,gg.s3)(),c=(0,gF.x)([n,"optionalAccess",g=>g.getOptions,"call",g=>g()]);if(e&&(0,gF.x)([c,"optionalAccess",g=>g.includeLocalVariables])){if(gf.V.major<18){d.kg.log("The `LocalVariables` integration is only supported on Node >= v18.");return}let n=!1!==g.captureAllExceptions;if(e.configureAndConnect((g,l)=>(function(g,{params:{reason:l,data:n,callFrames:c}},i){if("exception"!==l&&"promiseRejection"!==l){i();return}(0,gF.x)([t,"optionalCall",g=>g()]);let o=function(g,e){if(void 0!==e)return eY(g(e,1))}(g,(0,gF.x)([n,"optionalAccess",g=>g.description]));if(void 0==o){i();return}let{add:s,next:a}=ev(g=>{I.set(o,g),i()});for(let g=0;g<Math.min(c.length,5);g++){let{scopeChain:t,functionName:I,this:l}=c[g],n=t.find(g=>"local"===g.type),i="global"!==l.className&&l.className?`${l.className}.${I}`:I;if(void 0===(0,gF.x)([n,"optionalAccess",g=>g.object,"access",g=>g.objectId]))s(e=>{e[g]={function:i},a(e)});else{let t=n.object.objectId;s(I=>(0,gF.x)([e,"optionalAccess",g=>g.getLocalVariables,"call",e=>e(t,e=>{I[g]={function:i,vars:e},a(I)})]))}}a([])})(c.stackParser,g,l),n),n){var i,o,s;let I,l,n;i=g.maxExceptionsPerSecond||50,o=()=>{d.kg.log("Local variables rate-limit lifted."),(0,gF.x)([e,"optionalAccess",g=>g.setPauseOnExceptions,"call",g=>g(!0)])},s=g=>{d.kg.log(`Local variables rate-limit exceeded. Disabling capturing of caught exceptions for ${g} seconds.`),(0,gF.x)([e,"optionalAccess",g=>g.setPauseOnExceptions,"call",g=>g(!1)])},I=0,l=5,n=0,setInterval(()=>{0===n?I>i&&(s(l*=2),l>86400&&(l=86400),n=l):0==(n-=1)&&o(),I=0},1e3).unref(),t=()=>{I+=1}}l=!0}},processEvent:g=>l?function(g){for(let e of(0,gF.x)([g,"optionalAccess",g=>g.exception,"optionalAccess",g=>g.values])||[])!function(g){let e=eY((0,gF.x)([g,"optionalAccess",g=>g.stacktrace,"optionalAccess",g=>g.frames]));if(void 0===e)return;let t=I.remove(e);if(void 0===t)return;let l=(0,gF.x)([g,"access",g=>g.stacktrace,"optionalAccess",g=>g.frames,"optionalAccess",g=>g.length])||0;for(let e=0;e<l;e++){var n,c;let I=l-e-1;if(!(0,gF.x)([g,"optionalAccess",g=>g.stacktrace,"optionalAccess",g=>g.frames,"optionalAccess",g=>g[I]])||!t[e])break;void 0!==t[e].vars&&!1!==g.stacktrace.frames[I].in_app&&((n=g.stacktrace.frames[I].function)===(c=t[e].function)||eX(n)&&eX(c))&&(g.stacktrace.frames[I].vars=t[e].vars)}}(e);return g}(g):g,_getCachedFramesCount:()=>I.size,_getFirstCachedFrame:()=>I.values()[0]}}),eJ=(0,ge.RN)(eK,eF);!function(g){g.RequestCreate="undici:request:create",g.RequestEnd="undici:request:headers",g.RequestError="undici:request:error"}(o||(o={}));let ew=(0,ge._I)(g=>new eU(g));class eU{static __initStatic(){this.id="Undici"}__init(){this.name=eU.id}__init2(){this._createSpanUrlMap=new gU(100)}__init3(){this._headersUrlMap=new gU(100)}constructor(g={}){eU.prototype.__init.call(this),eU.prototype.__init2.call(this),eU.prototype.__init3.call(this),eU.prototype.__init4.call(this),eU.prototype.__init5.call(this),eU.prototype.__init6.call(this),this._options={breadcrumbs:void 0===g.breadcrumbs||g.breadcrumbs,tracing:g.tracing,shouldCreateSpanForRequest:g.shouldCreateSpanForRequest}}setupOnce(g){let e;if(!(gf.V.major<16)){try{e=t(7643)}catch(g){}e&&e.subscribe&&(e.subscribe(o.RequestCreate,this._onRequestCreate),e.subscribe(o.RequestEnd,this._onRequestEnd),e.subscribe(o.RequestError,this._onRequestError))}}_shouldCreateSpan(g){if(!1===this._options.tracing||void 0===this._options.tracing&&!(0,w.z)())return!1;if(void 0===this._options.shouldCreateSpanForRequest)return!0;let e=this._createSpanUrlMap.get(g);if(void 0!==e)return e;let t=this._options.shouldCreateSpanForRequest(g);return this._createSpanUrlMap.set(g,t),t}__init4(){this._onRequestCreate=g=>{if(!(0,gF.x)([gg.s3,"call",g=>g(),"optionalAccess",g=>g.getIntegration,"call",g=>g(eU)]))return;let{request:e}=g,t=e.origin?e.origin.toString()+e.path:e.path,I=(0,gg.s3)();if(!I||gJ(t,I)||void 0!==e.__sentry_span__)return;let l=I.getOptions(),n=(0,gg.nZ)(),c=(0,Z.aF)(),i=(0,k.HN)(),o=this._shouldCreateSpan(t)?function(g,e,t){let I=function(g){if(!g)return{};let e=g.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);if(!e)return{};let t=e[6]||"",I=e[8]||"";return{host:e[4],path:e[5],protocol:e[2],search:t,hash:I,relative:e[5]+t+I}}(t),l=e.method||"GET",n={"http.method":l};return I.search&&(n["http.query"]=I.search),I.hash&&(n["http.fragment"]=I.hash),(0,gF.x)([g,"optionalAccess",g=>g.startChild,"call",g=>g({op:"http.client",origin:"auto.http.node.undici",description:`${l} ${function(g){let{protocol:e,host:t,path:I}=g,l=t&&t.replace(/^.*@/,"[filtered]:[filtered]@").replace(/(:80)$/,"").replace(/(:443)$/,"")||"";return`${e?`${e}://`:""}${l}${I}`}(I)}`,data:n})])}(i,e,t):void 0;if(o&&(e.__sentry_span__=o),(g=>{if(void 0===l.tracePropagationTargets)return!0;let e=this._headersUrlMap.get(g);if(void 0!==e)return e;let t=(0,gc.U0)(g,l.tracePropagationTargets);return this._headersUrlMap.set(g,t),t})(t)){var s;let{traceId:g,spanId:t,sampled:l,dsc:i}={...c.getPropagationContext(),...n.getPropagationContext()},a=o?(0,r.Hb)(o):(0,gk.$p)(g,t,l);s=(0,gz.IQ)(i||(o?(0,x.j)(o):(0,x._)(g,I,n))),!e.headers.split("\r\n").some(g=>g.startsWith("sentry-trace:"))&&(e.addHeader("sentry-trace",a),s&&e.addHeader("baggage",s))}}}__init5(){this._onRequestEnd=g=>{if(!(0,gF.x)([gg.s3,"call",g=>g(),"optionalAccess",g=>g.getIntegration,"call",g=>g(eU)]))return;let{request:e,response:t}=g,I=e.origin?e.origin.toString()+e.path:e.path;if(gJ(I,(0,gg.s3)()))return;let l=e.__sentry_span__;l&&(T(l,t.statusCode),l.end()),this._options.breadcrumbs&&(0,gg.n_)({category:"http",data:{method:e.method,status_code:t.statusCode,url:I},type:"http"},{event:"response",request:e,response:t})}}__init6(){this._onRequestError=g=>{if(!(0,gF.x)([gg.s3,"call",g=>g(),"optionalAccess",g=>g.getIntegration,"call",g=>g(eU)]))return;let{request:e}=g,t=e.origin?e.origin.toString()+e.path:e.path;if(gJ(t,(0,gg.s3)()))return;let I=e.__sentry_span__;I&&(I.setStatus("internal_error"),I.end()),this._options.breadcrumbs&&(0,gg.n_)({category:"http",data:{method:e.method,url:t},level:"error",type:"http"},{event:"error",request:e})}}}eU.__initStatic();var ek=t(3685);let ez=/^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;function ef(g,e=!1){let{host:t,path:I,pass:l,port:n,projectId:c,protocol:i,publicKey:o}=g;return`${i}://${o}${e&&l?`:${l}`:""}@${t}${n?`:${n}`:""}/${I?`${I}/`:I}${c}`}function ex(g){return{protocol:g.protocol,publicKey:g.publicKey||"",pass:g.pass||"",host:g.host,port:g.port||"",path:g.path||"",projectId:g.projectId}}function eL(g,e=[]){return[g,e]}function eQ(g,e){for(let t of g[1]){let g=t[0].type;if(e(t,g))return!0}return!1}function eE(g,e){return(e||new TextEncoder).encode(g)}function eT(g,e){let[t,I]=g,l=JSON.stringify(t);function n(g){"string"==typeof l?l="string"==typeof g?l+g:[eE(l,e),g]:l.push("string"==typeof g?eE(g,e):g)}for(let g of I){let[e,t]=g;if(n(`
${JSON.stringify(e)}
`),"string"==typeof t||t instanceof Uint8Array)n(t);else{let g;try{g=JSON.stringify(t)}catch(e){g=JSON.stringify((0,gr.Fv)(t))}n(g)}}return"string"==typeof l?l:function(g){let e=g.reduce((g,e)=>g+e.length,0),t=new Uint8Array(e),I=0;for(let e of g)t.set(e,I),I+=e.length;return t}(l)}let e_={session:"session",sessions:"session",attachment:"attachment",transaction:"transaction",event:"error",client_report:"internal",user_report:"default",profile:"profile",replay_event:"replay",replay_recording:"replay",check_in:"monitor",feedback:"feedback",span:"span",statsd:"unknown"};function ej(g){if(!g||!g.sdk)return;let{name:e,version:t}=g.sdk;return{name:e,version:t}}let eM="Spotlight",eO=(0,ge._I)((g={})=>{let e={sidecarUrl:g.sidecarUrl||"http://localhost:8969/stream"};return{name:eM,setupOnce(){},setup(g){"object"==typeof process&&process.env&&d.kg.warn("[Spotlight] It seems you're not in dev mode. Do you really want to have Spotlight enabled?"),function(g,e){let t=function(g){try{return new gx.URL(`${g}`)}catch(e){d.kg.warn(`[Spotlight] Invalid sidecar URL: ${g}`);return}}(e.sidecarUrl);if(!t)return;let I=0;if("function"!=typeof g.on){d.kg.warn("[Spotlight] Cannot connect to spotlight due to missing method on SDK client (`client.on`)");return}g.on("beforeEnvelope",g=>{if(I>3){d.kg.warn("[Spotlight] Disabled Sentry -> Spotlight integration due to too many failed requests");return}let e=eT(g),l=(function(){let{request:g}=ek;return"__sentry_original__"in g?g.__sentry_original__:g})()({method:"POST",path:t.pathname,hostname:t.hostname,port:t.port,headers:{"Content-Type":"application/x-sentry-envelope"}},g=>{g.on("data",()=>{}),g.on("end",()=>{}),g.setEncoding("utf8")});l.on("error",()=>{I++,d.kg.warn("[Spotlight] Failed to send envelope to Spotlight Sidecar")}),l.write(e),l.end()})}(g,e)}}}),eP=(0,ge.RN)(eM,eO);var eD=t(826);function eq(g){return g&&void 0!==g.statusCode}function e$(g){(0,gg.Tb)(g,{mechanism:{type:"hapi",handled:!1,data:{function:"hapiErrorPlugin"}}})}let e0={name:"SentryHapiErrorPlugin",version:q.J,register:async function(g){g.events.on("request",(g,e)=>{var t;let I=X();g.response&&(t=g.response)&&void 0!==t.isBoom?e$(g.response):e&&void 0!==e.error&&e$(e.error),I&&(I.setStatus("internal_error"),I.end())})}},e2={name:"SentryHapiTracingPlugin",version:q.J,register:async function(g){g.ext("onPreHandler",(g,e)=>{let t=(0,k.yn)({sentryTrace:g.headers["sentry-trace"]||void 0,baggage:g.headers.baggage||void 0},e=>(0,gg.Yr)({...e,op:"hapi.request",name:g.route.path,description:`${g.route.method} ${g.path}`}));return(0,gg.nZ)().setSpan(t),e.continue}),g.ext("onPreResponse",(g,e)=>{let t=X();if(g.response&&eq(g.response)&&t){let e=g.response;e.header("sentry-trace",(0,r.Hb)(t));let I=(0,gz.IQ)((0,x.j)(t));I&&e.header("baggage",I)}return e.continue}),g.ext("onPostHandler",(g,e)=>{let t=X();return t&&(g.response&&eq(g.response)&&T(t,g.response.statusCode),t.end()),e.continue})}},e9="Hapi",e5=(0,ge._I)((g={})=>{let e=g.server;return{name:e9,setupOnce(){e&&(0,U.hl)(e,"start",g=>async function(){return await this.register(e2),await this.register(e0),g.apply(this)})}}}),e3=(0,ge.RN)(e9,e5);var e1=t(495);function e4(g){let e=(0,gF.x)([g,"call",g=>g(),"access",g=>g.getClient,"call",g=>g(),"optionalAccess",g=>g.getOptions,"call",g=>g()]);return"sentry"!==((0,gF.x)([e,"optionalAccess",g=>g.instrumenter])||"sentry")}class e8{static __initStatic(){this.id="Apollo"}constructor(g={useNestjs:!1}){this.name=e8.id,this._useNest=!!g.useNestjs}loadDependency(){return this._useNest?this._module=this._module||(0,e1.$y)("@nestjs/graphql"):this._module=this._module||(0,e1.$y)("apollo-server-core"),this._module}setupOnce(g,e){if(!e4(e)){if(this._useNest){let g=this.loadDependency();g&&(0,U.hl)(g.GraphQLFactory.prototype,"mergeWithSchema",function(g){return function(...t){return(0,U.hl)(this.resolversExplorerService,"explore",function(g){return function(){return e7((0,L.lE)(g.call(this)),e)}}),g.call(this,...t)}})}else{let g=this.loadDependency();if(!g)return;(0,U.hl)(g.ApolloServerBase.prototype,"constructSchema",function(g){return function(){if(!this.config.resolvers)return g.call(this);let t=(0,L.lE)(this.config.resolvers);return this.config.resolvers=e7(t,e),g.call(this)}})}}}}function e7(g,e){return g.map(g=>(Object.keys(g).forEach(t=>{Object.keys(g[t]).forEach(I=>{if("function"==typeof g[t][I])(0,U.hl)(g[t],I,function(g){return function(...l){let n=e().getScope().getSpan(),c=(0,gF.x)([n,"optionalAccess",g=>g.startChild,"call",g=>g({description:`${t}.${I}`,op:"graphql.resolve",origin:"auto.graphql.apollo"})]),i=g.call(this,...l);return(0,S.J8)(i)?i.then(g=>((0,gF.x)([c,"optionalAccess",g=>g.end,"call",g=>g()]),g)):((0,gF.x)([c,"optionalAccess",g=>g.end,"call",g=>g()]),i)}})})}),g))}e8.__initStatic();class e6{static __initStatic(){this.id="Express"}constructor(g={}){this.name=e6.id,this._router=g.router||g.app,this._methods=(Array.isArray(g.methods)?g.methods:[]).concat("use")}setupOnce(g,e){this._router&&(e4(e)||(function(g,e=[]){e.forEach(e=>(function(g,e){let t=g[e];return g[e]=function(...g){return t.call(this,...g.map(g=>"function"==typeof g?tg(g,e):Array.isArray(g)?g.map(g=>"function"==typeof g?tg(g,e):g):g))},g})(g,e))}(this._router,this._methods),function(g){let e="settings"in g;e&&void 0===g._router&&g.lazyrouter&&g.lazyrouter();let t=e?g._router:g;if(!t)return;let I=Object.getPrototypeOf(t),l=I.process_params;I.process_params=function(g,e,t,I,n){t._reconstructedRoute||(t._reconstructedRoute="");let{layerRoutePath:c,isRegex:i,isArray:o,numExtraSegments:s}=function(g){var e;let t=(0,gF.x)([g,"access",g=>g.route,"optionalAccess",g=>g.path]),I=(0,S.Kj)(t),l=Array.isArray(t);if(!t){let[e]=G.GLOBAL_OBJ.process.versions.node.split(".").map(Number);e>=16&&(t=te(g.path,g.regexp,g.keys))}if(!t)return{isRegex:I,isArray:l,numExtraSegments:0};let n=l?Math.max(t.reduce((g,e)=>g+eu(e.toString()),0)-eu(g.path||""),0):0;return{layerRoutePath:(e=t,l?e.map(g=>g.toString()).join(","):e&&e.toString()),isRegex:I,isArray:l,numExtraSegments:n}}(g);(c||i||o)&&(t._hasParameters=!0);let a=(c||function(g,e,t){let I=em(g||""),l=(0,gF.x)([I,"optionalAccess",g=>g.split,"call",g=>g("/"),"access",g=>g.filter,"call",g=>g(g=>!!g)]),n=0,c=(0,gF.x)([e,"optionalAccess",g=>g.split,"call",g=>g("/"),"access",g=>g.filter,"call",g=>g(g=>!!g),"access",g=>g.length])||0;return(0,gF.x)([t,"optionalAccess",g=>g.split,"call",g=>g("/"),"access",g=>g.filter,"call",g=>g(g=>(0,gF.x)([l,"optionalAccess",g=>g[c+n]])===g&&(n+=1,!0)),"access",g=>g.join,"call",g=>g("/")])}(t.originalUrl,t._reconstructedRoute,g.path)||"").split("/").filter(g=>g.length>0&&(i||o||!g.includes("*"))).join("/");if(a&&a.length>0&&(t._reconstructedRoute+=`/${a}${i?"/":""}`),eu(em(t.originalUrl||""))+s===eu(t._reconstructedRoute)){t._hasParameters||t._reconstructedRoute===t.originalUrl||(t._reconstructedRoute=t.originalUrl?em(t.originalUrl):t.originalUrl);let g=I.__sentry_transaction,e=g&&(0,r.XU)(g).data||{};if(g&&"custom"!==e[N]){let e=t._reconstructedRoute||"/",[I,l]=ep(t,{path:!0,method:!0,customRoute:e});g.updateName(I),g.setAttribute(N,l)}}return l.call(this,g,e,t,I,n)}}(this._router)))}}function tg(g,e){let t=g.length;switch(t){case 2:return function(t,I){let l=I.__sentry_transaction;if(l){let t=l.startChild({description:g.name,op:`middleware.express.${e}`,origin:"auto.middleware.express"});I.once("finish",()=>{t.end()})}return g.call(this,t,I)};case 3:return function(t,I,l){let n=I.__sentry_transaction,c=(0,gF.x)([n,"optionalAccess",g=>g.startChild,"call",t=>t({description:g.name,op:`middleware.express.${e}`,origin:"auto.middleware.express"})]);g.call(this,t,I,function(...g){(0,gF.x)([c,"optionalAccess",g=>g.end,"call",g=>g()]),l.call(this,...g)})};case 4:return function(t,I,l,n){let c=l.__sentry_transaction,i=(0,gF.x)([c,"optionalAccess",g=>g.startChild,"call",t=>t({description:g.name,op:`middleware.express.${e}`,origin:"auto.middleware.express"})]);g.call(this,t,I,l,function(...g){(0,gF.x)([i,"optionalAccess",g=>g.end,"call",g=>g()]),n.call(this,...g)})};default:throw Error(`Express middleware takes 2-4 arguments. Got: ${t}`)}}e6.__initStatic();let te=(g,e,t)=>{if(!g||!e||!t||0===Object.keys(t).length||!(0,gF.x)([t,"access",g=>g[0],"optionalAccess",g=>g.offset]))return;let I=t.sort((g,e)=>g.offset-e.offset),l=RegExp(e,`${e.flags}d`).exec(g);if(!l||!l.indices)return;let[,...n]=l.indices;if(n.length!==I.length)return;let c=g,i=0;return n.forEach((g,e)=>{if(g){let[t,l]=g,n=c.substring(0,t-i),o=`:${I[e].name}`;c=n+o+c.substring(l-i),i+=l-t-o.length}}),c};class tt{static __initStatic(){this.id="GraphQL"}constructor(){this.name=tt.id}loadDependency(){return this._module=this._module||(0,e1.$y)("graphql/execution/execute.js")}setupOnce(g,e){if(e4(e))return;let t=this.loadDependency();t&&(0,U.hl)(t,"execute",function(g){return function(...t){let I=e().getScope(),l=I.getSpan(),n=(0,gF.x)([l,"optionalAccess",g=>g.startChild,"call",g=>g({description:"execute",op:"graphql.execute",origin:"auto.graphql.graphql"})]);(0,gF.x)([I,"optionalAccess",g=>g.setSpan,"call",g=>g(n)]);let c=g.call(this,...t);return(0,S.J8)(c)?c.then(g=>((0,gF.x)([n,"optionalAccess",g=>g.end,"call",g=>g()]),(0,gF.x)([I,"optionalAccess",g=>g.setSpan,"call",g=>g(l)]),g)):((0,gF.x)([n,"optionalAccess",g=>g.end,"call",g=>g()]),(0,gF.x)([I,"optionalAccess",g=>g.setSpan,"call",g=>g(l)]),c)}})}}tt.__initStatic();let tI=["aggregate","bulkWrite","countDocuments","createIndex","createIndexes","deleteMany","deleteOne","distinct","drop","dropIndex","dropIndexes","estimatedDocumentCount","find","findOne","findOneAndDelete","findOneAndReplace","findOneAndUpdate","indexes","indexExists","indexInformation","initializeOrderedBulkOp","insertMany","insertOne","isCapped","mapReduce","options","parallelCollectionScan","rename","replaceOne","stats","updateMany","updateOne"],tl={bulkWrite:["operations"],countDocuments:["query"],createIndex:["fieldOrSpec"],createIndexes:["indexSpecs"],deleteMany:["filter"],deleteOne:["filter"],distinct:["key","query"],dropIndex:["indexName"],find:["query"],findOne:["query"],findOneAndDelete:["filter"],findOneAndReplace:["filter","replacement"],findOneAndUpdate:["filter","update"],indexExists:["indexes"],insertMany:["docs"],insertOne:["doc"],mapReduce:["map","reduce"],rename:["newName"],replaceOne:["filter","doc"],updateMany:["filter","update"],updateOne:["filter","update"]};class tn{static __initStatic(){this.id="Mongo"}constructor(g={}){this.name=tn.id,this._operations=Array.isArray(g.operations)?g.operations:tI,this._describeOperations=!("describeOperations"in g)||g.describeOperations,this._useMongoose=!!g.useMongoose}loadDependency(){let g=this._useMongoose?"mongoose":"mongodb";return this._module=this._module||(0,e1.$y)(g)}setupOnce(g,e){if(e4(e))return;let t=this.loadDependency();if(!t){this._useMongoose;return}this._instrumentOperations(t.Collection,this._operations,e)}_instrumentOperations(g,e,t){e.forEach(e=>this._patchOperation(g,e,t))}_patchOperation(g,e,t){if(!(e in g.prototype))return;let I=this._getSpanContextFromOperationArguments.bind(this);(0,U.hl)(g.prototype,e,function(g){return function(...l){let n=l[l.length-1],c=t(),i=c.getScope(),o=c.getClient(),s=i.getSpan(),a=(0,gF.x)([o,"optionalAccess",g=>g.getOptions,"call",g=>g(),"access",g=>g.sendDefaultPii]);if("function"!=typeof n||"mapReduce"===e&&2===l.length){let t=(0,gF.x)([s,"optionalAccess",g=>g.startChild,"call",g=>g(I(this,e,l,a))]),n=g.call(this,...l);if((0,S.J8)(n))return n.then(g=>((0,gF.x)([t,"optionalAccess",g=>g.end,"call",g=>g()]),g));if(!n||"object"!=typeof n||!n.once||"function"!=typeof n.once)return(0,gF.x)([t,"optionalAccess",g=>g.end,"call",g=>g()]),n;try{n.once("close",()=>{(0,gF.x)([t,"optionalAccess",g=>g.end,"call",g=>g()])})}catch(g){(0,gF.x)([t,"optionalAccess",g=>g.end,"call",g=>g()])}return n}let C=(0,gF.x)([s,"optionalAccess",g=>g.startChild,"call",g=>g(I(this,e,l.slice(0,-1)))]);return g.call(this,...l.slice(0,-1),function(g,e){(0,gF.x)([C,"optionalAccess",g=>g.end,"call",g=>g()]),n(g,e)})}})}_getSpanContextFromOperationArguments(g,e,t,I=!1){let l={"db.system":"mongodb","db.name":g.dbName,"db.operation":e,"db.mongodb.collection":g.collectionName},n={op:"db",origin:"auto.db.mongo",description:e,data:l},c=tl[e],i=Array.isArray(this._describeOperations)?this._describeOperations.includes(e):this._describeOperations;if(!c||!i||!I)return n;try{if("mapReduce"===e){let[g,e]=t;l[c[0]]="string"==typeof g?g:g.name||"<anonymous>",l[c[1]]="string"==typeof e?e:e.name||"<anonymous>"}else for(let g=0;g<c.length;g++)l[`db.mongodb.${c[g]}`]=JSON.stringify(t[g])}catch(g){}return n}}tn.__initStatic();class tc{static __initStatic(){this.id="Mysql"}constructor(){this.name=tc.id}loadDependency(){return this._module=this._module||(0,e1.$y)("mysql/lib/Connection.js")}setupOnce(g,e){let t;if(e4(e))return;let I=this.loadDependency();if(I){try{I.prototype.connect=new Proxy(I.prototype.connect,{apply:(g,e,I)=>(t||(t=e.config),g.apply(e,I))})}catch(g){}(0,U.hl)(I,"createQuery",function(g){return function(t,I,n){let c=e().getScope().getSpan(),i=(0,gF.x)([c,"optionalAccess",g=>g.startChild,"call",g=>g({description:"string"==typeof t?t:t.sql,op:"db",origin:"auto.db.mysql",data:{"db.system":"mysql"}})]);if("function"==typeof n)return g.call(this,t,I,function(g,e,t){l(i),n(g,e,t)});if("function"==typeof I)return g.call(this,t,function(g,e,t){l(i),I(g,e,t)});let o=g.call(this,t,I);return o.on("end",()=>{l(i)}),o}})}function l(g){if(!g)return;let e=t?{"server.address":t.host,"server.port":t.port,"db.user":t.user}:{};Object.keys(e).forEach(t=>{g.setAttribute(t,e[t])}),g.end()}}}tc.__initStatic();class ti{static __initStatic(){this.id="Postgres"}constructor(g={}){this.name=ti.id,this._usePgNative=!!g.usePgNative,this._module=g.module}loadDependency(){return this._module=this._module||(0,e1.$y)("pg")}setupOnce(g,e){if(e4(e))return;let t=this.loadDependency();if(!t)return;let I=this._usePgNative?(0,gF.x)([t,"access",g=>g.native,"optionalAccess",g=>g.Client]):t.Client;I&&(0,U.hl)(I.prototype,"query",function(g){return function(t,I,l){let n=e().getScope().getSpan(),c={"db.system":"postgresql"};try{this.database&&(c["db.name"]=this.database),this.host&&(c["server.address"]=this.host),this.port&&(c["server.port"]=this.port),this.user&&(c["db.user"]=this.user)}catch(g){}let i=(0,gF.x)([n,"optionalAccess",g=>g.startChild,"call",g=>g({description:"string"==typeof t?t:t.text,op:"db",origin:"auto.db.postgres",data:c})]);if("function"==typeof l)return g.call(this,t,I,function(g,e){(0,gF.x)([i,"optionalAccess",g=>g.end,"call",g=>g()]),l(g,e)});if("function"==typeof I)return g.call(this,t,function(g,e){(0,gF.x)([i,"optionalAccess",g=>g.end,"call",g=>g()]),I(g,e)});let o=void 0!==I?g.call(this,t,I):g.call(this,t);return(0,S.J8)(o)?o.then(g=>((0,gF.x)([i,"optionalAccess",g=>g.end,"call",g=>g()]),g)):((0,gF.x)([i,"optionalAccess",g=>g.end,"call",g=>g()]),o)}})}}ti.__initStatic();class to{static __initStatic(){this.id="Prisma"}constructor(g={}){if(this.name=to.id,function(g){return!!g&&!!g.$use}(g.client)&&!g.client._sentryInstrumented){(0,U.xp)(g.client,"_sentryInstrumented",!0);let e={};try{let t=g.client._engineConfig;if(t){let{activeProvider:g,clientVersion:I}=t;g&&(e["db.system"]=g),I&&(e["db.prisma.version"]=I)}}catch(g){}g.client.$use((g,t)=>{if(e4(Z.Gd))return t(g);let I=g.action,l=g.model;return(0,k.GK)({name:l?`${l} ${I}`:I,onlyIfParent:!0,op:"db.prisma",attributes:{[J]:"auto.db.prisma"},data:{...e,"db.operation":I}},()=>t(g))})}}setupOnce(){}}to.__initStatic();gR();let ts={...s,...a,...C};var ta=t(3639);function tC(){let g=ta.active;if(g)return(0,Z.uZ)(g),(0,Z.vi)(g)}function td(g,e){let t=ta.active;if(t&&(0,gF.x)([e,"optionalAccess",g=>g.reuseExisting]))return g();let I=ta.create(),l=function(g){let e={};return(0,Z.uZ)(e,g),(0,Z.vi)(e)}(t?(0,Z.vi)(t):void 0);return(0,Z.j0)(I,l),I.bind(()=>g())()}var tb=t(852),tZ=t(2631);class tr extends Error{constructor(g,e="warn"){super(g),this.message=g,this.name=new.target.prototype.constructor.name,Object.setPrototypeOf(this,new.target.prototype),this.logLevel=e}}let tG=/[^a-zA-Z0-9_/.-]+/g,tm=/[^\w\d\s_:/@.{}[\]$-]+/g;var tu=t(1867),tB=t(2196);let tA="Not capturing exception because it's already been captured.";class th{constructor(g){if(this._options=g,this._integrations={},this._integrationsInitialized=!1,this._numProcessing=0,this._outcomes={},this._hooks={},this._eventProcessors=[],g.dsn?this._dsn=function(g){let e="string"==typeof g?function(g){let e=ez.exec(g);if(!e){(0,d.Cf)(()=>{console.error(`Invalid Sentry Dsn: ${g}`)});return}let[t,I,l="",n,c="",i]=e.slice(1),o="",s=i,a=s.split("/");if(a.length>1&&(o=a.slice(0,-1).join("/"),s=a.pop()),s){let g=s.match(/^\d+/);g&&(s=g[0])}return ex({host:n,pass:l,path:o,projectId:s,port:c,protocol:t,publicKey:I})}(g):ex(g);if(e&&function(g){if(!m.X)return!0;let{port:e,projectId:t,protocol:I}=g;return!["protocol","publicKey","host","projectId"].find(e=>!g[e]&&(d.kg.error(`Invalid Sentry Dsn: ${e} missing`),!0))&&(t.match(/^\d+$/)?"http"===I||"https"===I?!(e&&isNaN(parseInt(e,10)))||(d.kg.error(`Invalid Sentry Dsn: Invalid port ${e}`),!1):(d.kg.error(`Invalid Sentry Dsn: Invalid protocol ${I}`),!1):(d.kg.error(`Invalid Sentry Dsn: Invalid projectId ${t}`),!1))}(e))return e}(g.dsn):b.X&&d.kg.warn("No DSN provided, client will not send events."),this._dsn){let e=function(g,e={}){let t="string"==typeof e?e:e.tunnel,I="string"!=typeof e&&e._metadata?e._metadata.sdk:void 0;return t||`${function(g){let e=g.protocol?`${g.protocol}:`:"",t=g.port?`:${g.port}`:"";return`${e}//${g.host}${t}${g.path?`/${g.path}`:""}/api/`}(g)}${g.projectId}/envelope/?${(0,U._j)({sentry_key:g.publicKey,sentry_version:"7",...I&&{sentry_client:`${I.name}/${I.version}`}})}`}(this._dsn,g);this._transport=g.transport({recordDroppedEvent:this.recordDroppedEvent.bind(this),...g.transportOptions,url:e})}}captureException(g,e,t){if((0,L.YO)(g)){b.X&&d.kg.log(tA);return}let I=e&&e.event_id;return this._process(this.eventFromException(g,e).then(g=>this._captureEvent(g,e,t)).then(g=>{I=g})),I}captureMessage(g,e,t,I){let l=t&&t.event_id,n=(0,S.Le)(g)?g:String(g),c=(0,S.pt)(g)?this.eventFromMessage(n,e,t):this.eventFromException(g,t);return this._process(c.then(g=>this._captureEvent(g,t,I)).then(g=>{l=g})),l}captureEvent(g,e,t){if(e&&e.originalException&&(0,L.YO)(e.originalException)){b.X&&d.kg.log(tA);return}let I=e&&e.event_id,l=(g.sdkProcessingMetadata||{}).capturedSpanScope;return this._process(this._captureEvent(g,e,l||t).then(g=>{I=g})),I}captureSession(g){"string"!=typeof g.release?b.X&&d.kg.warn("Discarded session because of missing or non-string release"):(this.sendSession(g),(0,tu.CT)(g,{init:!1}))}getDsn(){return this._dsn}getOptions(){return this._options}getSdkMetadata(){return this._options._metadata}getTransport(){return this._transport}flush(g){let e=this._transport;return e?(this.metricsAggregator&&this.metricsAggregator.flush(),this._isClientDoneProcessing(g).then(t=>e.flush(g).then(g=>t&&g))):(0,tZ.WD)(!0)}close(g){return this.flush(g).then(g=>(this.getOptions().enabled=!1,this.metricsAggregator&&this.metricsAggregator.close(),g))}getEventProcessors(){return this._eventProcessors}addEventProcessor(g){this._eventProcessors.push(g)}setupIntegrations(g){(g&&!this._integrationsInitialized||this._isEnabled()&&!this._integrationsInitialized)&&this._setupIntegrations()}init(){this._isEnabled()&&this._setupIntegrations()}getIntegrationById(g){return this.getIntegrationByName(g)}getIntegrationByName(g){return this._integrations[g]}getIntegration(g){try{return this._integrations[g.id]||null}catch(e){return b.X&&d.kg.warn(`Cannot retrieve integration ${g.id} from the current Client`),null}}addIntegration(g){let e=this._integrations[g.name];(0,ge.m7)(this,g,this._integrations),e||(0,ge.uf)(this,[g])}sendEvent(g,e={}){this.emit("beforeSendEvent",g,e);let t=function(g,e,t,I){var l;let n=ej(t),c=g.type&&"replay_event"!==g.type?g.type:"event";(l=t&&t.sdk)&&(g.sdk=g.sdk||{},g.sdk.name=g.sdk.name||l.name,g.sdk.version=g.sdk.version||l.version,g.sdk.integrations=[...g.sdk.integrations||[],...l.integrations||[]],g.sdk.packages=[...g.sdk.packages||[],...l.packages||[]]);let i=function(g,e,t,I){let l=g.sdkProcessingMetadata&&g.sdkProcessingMetadata.dynamicSamplingContext;return{event_id:g.event_id,sent_at:new Date().toISOString(),...e&&{sdk:e},...!!t&&I&&{dsn:ef(I)},...l&&{trace:(0,U.Jr)({...l})}}}(g,n,I,e);return delete g.sdkProcessingMetadata,eL(i,[[{type:c},g]])}(g,this._dsn,this._options._metadata,this._options.tunnel);for(let g of e.attachments||[])t=function(g,e){let[t,I]=g;return[t,[...I,e]]}(t,function(g,e){let t="string"==typeof g.data?eE(g.data,e):g.data;return[(0,U.Jr)({type:"attachment",length:t.length,filename:g.filename,content_type:g.contentType,attachment_type:g.attachmentType}),t]}(g,this._options.transportOptions&&this._options.transportOptions.textEncoder));let I=this._sendEnvelope(t);I&&I.then(e=>this.emit("afterSendEvent",g,e),null)}sendSession(g){let e=function(g,e,t,I){let l=ej(t);return eL({sent_at:new Date().toISOString(),...l&&{sdk:l},...!!I&&e&&{dsn:ef(e)}},["aggregates"in g?[{type:"sessions"},g]:[{type:"session"},g.toJSON()]])}(g,this._dsn,this._options._metadata,this._options.tunnel);this._sendEnvelope(e)}recordDroppedEvent(g,e,t){if(this._options.sendClientReports){let t=`${g}:${e}`;b.X&&d.kg.log(`Adding outcome: "${t}"`),this._outcomes[t]=this._outcomes[t]+1||1}}captureAggregateMetrics(g){b.X&&d.kg.log(`Flushing aggregated metrics, number of metrics: ${g.length}`);let e=function(g,e,t,I){let l={sent_at:new Date().toISOString()};return t&&t.sdk&&(l.sdk={name:t.sdk.name,version:t.sdk.version}),I&&e&&(l.dsn=ef(e)),eL(l,[function(g){let e=function(g){let e="";for(let t of g){let g=Object.entries(t.tags),I=g.length>0?`|#${g.map(([g,e])=>`${g}:${e}`).join(",")}`:"";e+=`${t.name}@${t.unit}:${t.metric}|${t.metricType}${I}|T${t.timestamp}
`}return e}(g);return[{type:"statsd",length:e.length},e]}(g)])}(g,this._dsn,this._options._metadata,this._options.tunnel);this._sendEnvelope(e)}on(g,e){this._hooks[g]||(this._hooks[g]=[]),this._hooks[g].push(e)}emit(g,...e){this._hooks[g]&&this._hooks[g].forEach(g=>g(...e))}_setupIntegrations(){let{integrations:g}=this._options;this._integrations=(0,ge.q4)(this,g),(0,ge.uf)(this,g),this._integrationsInitialized=!0}_updateSessionFromEvent(g,e){let t=!1,I=!1,l=e.exception&&e.exception.values;if(l)for(let g of(I=!0,l)){let e=g.mechanism;if(e&&!1===e.handled){t=!0;break}}let n="ok"===g.status;(n&&0===g.errors||n&&t)&&((0,tu.CT)(g,{...t&&{status:"crashed"},errors:g.errors||Number(I||t)}),this.captureSession(g))}_isClientDoneProcessing(g){return new tZ.cW(e=>{let t=0,I=setInterval(()=>{0==this._numProcessing?(clearInterval(I),e(!0)):(t+=1,g&&t>=g&&(clearInterval(I),e(!1)))},1)})}_isEnabled(){return!1!==this.getOptions().enabled&&void 0!==this._transport}_prepareEvent(g,e,t,I=(0,Z.aF)()){let l=this.getOptions(),n=Object.keys(this._integrations);return!e.integrations&&n.length>0&&(e.integrations=n),this.emit("preprocessEvent",g,e),(0,tB.R)(l,g,e,t,this,I).then(g=>{if(null===g)return g;let e={...I.getPropagationContext(),...t?t.getPropagationContext():void 0};if(!(g.contexts&&g.contexts.trace)&&e){let{traceId:I,spanId:l,parentSpanId:n,dsc:c}=e;g.contexts={trace:{trace_id:I,span_id:l,parent_span_id:n},...g.contexts};let i=c||(0,x._)(I,this,t);g.sdkProcessingMetadata={dynamicSamplingContext:i,...g.sdkProcessingMetadata}}return g})}_captureEvent(g,e={},t){return this._processEvent(g,e,t).then(g=>g.event_id,g=>{b.X&&("log"===g.logLevel?d.kg.log(g.message):d.kg.warn(g))})}_processEvent(g,e,t){let I=this.getOptions(),{sampleRate:l}=I,n=tW(g),c=tp(g),i=g.type||"error",o=`before send for type \`${i}\``;if(c&&"number"==typeof l&&Math.random()>l)return this.recordDroppedEvent("sample_rate","error",g),(0,tZ.$2)(new tr(`Discarding event because it's not included in the random sample (sampling rate = ${l})`,"log"));let s="replay_event"===i?"replay":i,a=(g.sdkProcessingMetadata||{}).capturedSpanIsolationScope;return this._prepareEvent(g,e,t,a).then(t=>{if(null===t)throw this.recordDroppedEvent("event_processor",s,g),new tr("An event processor returned `null`, will not send event.","log");return e.data&&!0===e.data.__sentry__?t:function(g,e){let t=`${e} must return \`null\` or a valid event.`;if((0,S.J8)(g))return g.then(g=>{if(!(0,S.PO)(g)&&null!==g)throw new tr(t);return g},g=>{throw new tr(`${e} rejected with ${g}`)});if(!(0,S.PO)(g)&&null!==g)throw new tr(t);return g}(function(g,e,t){let{beforeSend:I,beforeSendTransaction:l}=g;return tp(e)&&I?I(e,t):tW(e)&&l?l(e,t):e}(I,t,e),o)}).then(I=>{if(null===I)throw this.recordDroppedEvent("before_send",s,g),new tr(`${o} returned \`null\`, will not send event.`,"log");let l=t&&t.getSession();!n&&l&&this._updateSessionFromEvent(l,I);let c=I.transaction_info;return n&&c&&I.transaction!==g.transaction&&(I.transaction_info={...c,source:"custom"}),this.sendEvent(I,e),I}).then(null,g=>{if(g instanceof tr)throw g;throw this.captureException(g,{data:{__sentry__:!0},originalException:g}),new tr(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${g}`)})}_process(g){this._numProcessing++,g.then(g=>(this._numProcessing--,g),g=>(this._numProcessing--,g))}_sendEnvelope(g){if(this.emit("beforeEnvelope",g),this._isEnabled()&&this._transport)return this._transport.send(g).then(null,g=>{b.X&&d.kg.error("Error while sending event:",g)});b.X&&d.kg.error("Transport disabled")}_clearOutcomes(){let g=this._outcomes;return this._outcomes={},Object.keys(g).map(e=>{let[t,I]=e.split(":");return{reason:t,category:I,quantity:g[e]}})}}function tp(g){return void 0===g.type}function tW(g){return"transaction"===g.type}class tV{constructor(g){this._value=g}get weight(){return 1}add(g){this._value+=g}toString(){return`${this._value}`}}class ty{constructor(g){this._last=g,this._min=g,this._max=g,this._sum=g,this._count=1}get weight(){return 5}add(g){this._last=g,g<this._min&&(this._min=g),g>this._max&&(this._max=g),this._sum+=g,this._count++}toString(){return`${this._last}:${this._min}:${this._max}:${this._sum}:${this._count}`}}class tH{constructor(g){this._value=[g]}get weight(){return this._value.length}add(g){this._value.push(g)}toString(){return this._value.join(":")}}class tR{constructor(g){this.first=g,this._value=new Set([g])}get weight(){return this._value.size}add(g){this._value.add(g)}toString(){return Array.from(this._value).map(g=>"string"==typeof g?function(g){let e=0;for(let t=0;t<g.length;t++)e=(e<<5)-e+g.charCodeAt(t),e&=e;return e>>>0}(g):g).join(":")}}let tX={c:tV,g:ty,d:tH,s:tR};class tY{constructor(g){this._client=g,this._buckets=new Map,this._bucketsTotalWeight=0,this._interval=setInterval(()=>this._flush(),1e4),this._flushShift=Math.floor(1e4*Math.random()/1e3),this._forceFlush=!1}add(g,e,t,l="none",n={},c=(0,Q.ph)()){let i=Math.floor(c),o=e.replace(tG,"_"),s=function(g){let e={};for(let t in g)Object.prototype.hasOwnProperty.call(g,t)&&(e[t.replace(tG,"_")]=String(g[t]).replace(tm,""));return e}(n),a=function(g,e,t,I){let l=Object.entries((0,U.Jr)(I)).sort((g,e)=>g[0].localeCompare(e[0]));return`${g}${e}${t}${l}`}(g,o,l,s),C=this._buckets.get(a),d=C&&"s"===g?C.metric.weight:0;C?(C.metric.add(t),C.timestamp<i&&(C.timestamp=i)):(C={metric:new tX[g](t),timestamp:i,metricType:g,name:o,unit:l,tags:s},this._buckets.set(a,C)),function(g,e,t,l,n,c){let i=(0,k.HN)();if(i){let o=z(i)||new Map,s=`${g}:${e}@${l}`,a=o.get(c);if(a){let[,g]=a;o.set(c,[s,{min:Math.min(g.min,t),max:Math.max(g.max,t),count:g.count+=1,sum:g.sum+=t,tags:g.tags}])}else o.set(c,[s,{min:t,max:t,count:1,sum:t,tags:n}]);I||(I=new WeakMap),I.set(i,o)}}(g,o,"string"==typeof t?C.metric.weight-d:t,l,n,a),this._bucketsTotalWeight+=C.metric.weight,this._bucketsTotalWeight>=1e4&&this.flush()}flush(){this._forceFlush=!0,this._flush()}close(){this._forceFlush=!0,clearInterval(this._interval),this._flush()}_flush(){if(this._forceFlush){this._forceFlush=!1,this._bucketsTotalWeight=0,this._captureMetrics(this._buckets),this._buckets.clear();return}let g=Math.floor((0,Q.ph)())-10-this._flushShift,e=new Map;for(let[t,I]of this._buckets)I.timestamp<=g&&(e.set(t,I),this._bucketsTotalWeight-=I.metric.weight);for(let[g]of e)this._buckets.delete(g);this._captureMetrics(e)}_captureMetrics(g){if(g.size>0&&this._client.captureAggregateMetrics){let e=Array.from(g).map(([,g])=>g);this._client.captureAggregateMetrics(e)}}}class tv{constructor(g,e){this._client=g,this.flushTimeout=60,this._pendingAggregates={},this._isEnabled=!0,this._intervalId=setInterval(()=>this.flush(),1e3*this.flushTimeout),this._sessionAttrs=e}flush(){let g=this.getSessionAggregates();0!==g.aggregates.length&&(this._pendingAggregates={},this._client.sendSession(g))}getSessionAggregates(){let g=Object.keys(this._pendingAggregates).map(g=>this._pendingAggregates[parseInt(g)]),e={attrs:this._sessionAttrs,aggregates:g};return(0,U.Jr)(e)}close(){clearInterval(this._intervalId),this._isEnabled=!1,this.flush()}incrementSessionStatusCount(){if(!this._isEnabled)return;let g=(0,gg.nZ)(),e=g.getRequestSession();e&&e.status&&(this._incrementSessionStatusCount(e.status,new Date),g.setRequestSession(void 0))}_incrementSessionStatusCount(g,e){let t=new Date(e).setSeconds(0,0);this._pendingAggregates[t]=this._pendingAggregates[t]||{};let I=this._pendingAggregates[t];switch(I.started||(I.started=new Date(t).toISOString()),g){case"errored":return I.errored=(I.errored||0)+1,I.errored;case"ok":return I.exited=(I.exited||0)+1,I.exited;default:return I.crashed=(I.crashed||0)+1,I.crashed}}}class tS extends th{constructor(g){D(),super(g),g._experiments&&g._experiments.metricsAggregator&&(this.metricsAggregator=new tY(this))}eventFromException(g,e){return(0,tZ.WD)(function(g,e,t,I){let l;let n="function"==typeof g?g().getClient():g,c=t,i=I&&I.data&&I.data.mechanism||{handled:!0,type:"generic"};if(!(0,S.VZ)(t)){if((0,S.PO)(t)){let g=n&&n.getOptions().normalizeDepth;l={__serialized__:(0,gr.Qy)(t,g)};let e=function(g){if("name"in g&&"string"==typeof g.name){let e=`'${g.name}' captured as exception`;return"message"in g&&"string"==typeof g.message&&(e+=` with message '${g.message}'`),e}return"message"in g&&"string"==typeof g.message?g.message:`Object captured as exception with keys: ${(0,U.zf)(g)}`}(t);(c=I&&I.syntheticException||Error(e)).message=e}else(c=I&&I.syntheticException||Error(t)).message=t;i.synthetic=!0}let o={exception:{values:[gm(e,c)]}};return l&&(o.extra=l),(0,L.Db)(o,void 0,void 0),(0,L.EG)(o,i),{...o,event_id:I&&I.event_id}}((0,gg.s3)(),this._options.stackParser,g,e))}eventFromMessage(g,e="info",t){return(0,tZ.WD)(function(g,e,t="info",I,l){let n={event_id:I&&I.event_id,level:t};if(l&&I&&I.syntheticException){let t=gG(g,I.syntheticException);t.length&&(n.exception={values:[{value:e,stacktrace:{frames:t}}]})}if((0,S.Le)(e)){let{__sentry_template_string__:g,__sentry_template_values__:t}=e;return n.logentry={message:g,params:t},n}return n.message=e,n}(this._options.stackParser,g,e,t,this._options.attachStacktrace))}captureException(g,e,t){if(this._options.autoSessionTracking&&this._sessionFlusher&&t){let g=t.getRequestSession();g&&"ok"===g.status&&(g.status="errored")}return super.captureException(g,e,t)}captureEvent(g,e,t){if(this._options.autoSessionTracking&&this._sessionFlusher&&t&&"exception"===(g.type||"exception")&&g.exception&&g.exception.values&&g.exception.values.length>0){let g=t.getRequestSession();g&&"ok"===g.status&&(g.status="errored")}return super.captureEvent(g,e,t)}close(g){return this._sessionFlusher&&this._sessionFlusher.close(),super.close(g)}initSessionFlusher(){let{release:g,environment:e}=this._options;g?this._sessionFlusher=new tv(this,{release:g,environment:e}):b.X&&d.kg.warn("Cannot initialise an instance of SessionFlusher if no release is provided!")}captureCheckIn(g,e,t){let I="checkInId"in g&&g.checkInId?g.checkInId:(0,L.DM)();if(!this._isEnabled())return b.X&&d.kg.warn("SDK not enabled, will not capture checkin."),I;let{release:l,environment:n,tunnel:c}=this.getOptions(),i={check_in_id:I,monitor_slug:g.monitorSlug,status:g.status,release:l,environment:n};"duration"in g&&(i.duration=g.duration),e&&(i.monitor_config={schedule:e.schedule,checkin_margin:e.checkinMargin,max_runtime:e.maxRuntime,timezone:e.timezone});let[o,s]=this._getTraceInfoFromScope(t);s&&(i.contexts={trace:s});let a=function(g,e,t,I,l){let n={sent_at:new Date().toISOString()};return t&&t.sdk&&(n.sdk={name:t.sdk.name,version:t.sdk.version}),I&&l&&(n.dsn=ef(l)),e&&(n.trace=(0,U.Jr)(e)),eL(n,[[{type:"check_in"},g]])}(i,o,this.getSdkMetadata(),c,this.getDsn());return b.X&&d.kg.info("Sending checkin:",g.monitorSlug,g.status),this._sendEnvelope(a),I}_captureRequestSession(){this._sessionFlusher?this._sessionFlusher.incrementSessionStatusCount():b.X&&d.kg.warn("Discarded request mode session because autoSessionTracking option was disabled")}_prepareEvent(g,e,t,I){return this._options.platform&&(g.platform=g.platform||this._options.platform),this._options.runtime&&(g.contexts={...g.contexts,runtime:(g.contexts||{}).runtime||this._options.runtime}),this._options.serverName&&(g.server_name=g.server_name||this._options.serverName),super._prepareEvent(g,e,t,I)}_getTraceInfoFromScope(g){if(!g)return[void 0,void 0];let e=g.getSpan();if(e)return[(0,E.G)(e)?(0,x.j)(e):void 0,(0,r.wy)(e)];let{traceId:t,spanId:I,parentSpanId:l,dsc:n}=g.getPropagationContext(),c={trace_id:t,span_id:I,parent_span_id:l};return n?[n,c]:[(0,x._)(t,this,g),c]}}class tN extends tS{constructor(g){$(g,"node"),g.transportOptions={textEncoder:new gX.TextEncoder,...g.transportOptions},super({...g,platform:"node",runtime:{name:"node",version:global.process.version},serverName:g.serverName||global.process.env.SENTRY_NAME||eI.hostname()})}}function tK(g,e){return null!=g?g:e()}var tF=t(5687),tJ=t(2781),tw=t(5206);function tU(g,e,t=function(g){let e=[];function t(g){return e.splice(e.indexOf(g),1)[0]}return{$:e,add:function(I){if(!(void 0===g||e.length<g))return(0,tZ.$2)(new tr("Not adding Promise because buffer limit was reached."));let l=I();return -1===e.indexOf(l)&&e.push(l),l.then(()=>t(l)).then(null,()=>t(l).then(null,()=>{})),l},drain:function(g){return new tZ.cW((t,I)=>{let l=e.length;if(!l)return t(!0);let n=setTimeout(()=>{g&&g>0&&t(!1)},g);e.forEach(g=>{(0,tZ.WD)(g).then(()=>{--l||(clearTimeout(n),t(!0))},I)})})}}}(g.bufferSize||30)){let I={};function l(l){let n=[];if(eQ(l,(e,t)=>{let l=e_[t];if(function(g,e,t=Date.now()){return(g[e]||g.all||0)>t}(I,l)){let I=tk(e,t);g.recordDroppedEvent("ratelimit_backoff",l,I)}else n.push(e)}),0===n.length)return(0,tZ.WD)();let c=eL(l[0],n),i=e=>{eQ(c,(t,I)=>{let l=tk(t,I);g.recordDroppedEvent(e,e_[I],l)})};return t.add(()=>e({body:eT(c,g.textEncoder)}).then(g=>(void 0!==g.statusCode&&(g.statusCode<200||g.statusCode>=300)&&b.X&&d.kg.warn(`Sentry responded with status code ${g.statusCode} to sent event.`),I=function(g,{statusCode:e,headers:t},I=Date.now()){let l={...g},n=t&&t["x-sentry-rate-limits"],c=t&&t["retry-after"];if(n)for(let g of n.trim().split(",")){let[e,t]=g.split(":",2),n=parseInt(e,10),c=(isNaN(n)?60:n)*1e3;if(t)for(let g of t.split(";"))l[g]=I+c;else l.all=I+c}else c?l.all=I+function(g,e=Date.now()){let t=parseInt(`${g}`,10);if(!isNaN(t))return 1e3*t;let I=Date.parse(`${g}`);return isNaN(I)?6e4:I-e}(c,I):429===e&&(l.all=I+6e4);return l}(I,g),g),g=>{throw i("network_error"),g})).then(g=>g,g=>{if(g instanceof tr)return b.X&&d.kg.error("Skipped sending event because buffer is full."),i("queue_overflow"),(0,tZ.WD)();throw g})}return l.__sentry__baseTransport__=!0,{send:l,flush:g=>t.drain(g)}}function tk(g,e){if("event"===e||"transaction"===e)return Array.isArray(g)?g[1]:void 0}var tz=t(9491),tf=t.n(tz),tx=t(1808),tL=t(4404);let tQ=Symbol("AgentBaseInternalState");class tE extends ek.Agent{constructor(g){super(g),this[tQ]={}}isSecureEndpoint(g){if(g){if("boolean"==typeof g.secureEndpoint)return g.secureEndpoint;if("string"==typeof g.protocol)return"https:"===g.protocol}let{stack:e}=Error();return"string"==typeof e&&e.split("\n").some(g=>-1!==g.indexOf("(https.js:")||-1!==g.indexOf("node:https:"))}createSocket(g,e,t){let I={...e,secureEndpoint:this.isSecureEndpoint(e)};Promise.resolve().then(()=>this.connect(g,I)).then(l=>{if(l instanceof ek.Agent)return l.addRequest(g,I);this[tQ].currentSocket=l,super.createSocket(g,e,t)},t)}createConnection(){let g=this[tQ].currentSocket;if(this[tQ].currentSocket=void 0,!g)throw Error("No socket was returned in the `connect()` function");return g}get defaultPort(){return tK(this[tQ].defaultPort,()=>"https:"===this.protocol?443:80)}set defaultPort(g){this[tQ]&&(this[tQ].defaultPort=g)}get protocol(){return tK(this[tQ].protocol,()=>this.isSecureEndpoint()?"https:":"http:")}set protocol(g){this[tQ]&&(this[tQ].protocol=g)}}function tT(...g){d.kg.log("[https-proxy-agent:parse-proxy-response]",...g)}function t_(...g){d.kg.log("[https-proxy-agent]",...g)}class tj extends tE{static __initStatic(){this.protocols=["http","https"]}constructor(g,e){super(e),this.options={},this.proxy="string"==typeof g?new gx.URL(g):g,this.proxyHeaders=tK((0,gF.x)([e,"optionalAccess",g=>g.headers]),()=>({})),t_("Creating new HttpsProxyAgent instance: %o",this.proxy.href);let t=(this.proxy.hostname||this.proxy.host).replace(/^\[|\]$/g,""),I=this.proxy.port?parseInt(this.proxy.port,10):"https:"===this.proxy.protocol?443:80;this.connectOpts={ALPNProtocols:["http/1.1"],...e?tO(e,"headers"):null,host:t,port:I}}async connect(g,e){var t;let I;let{proxy:l}=this;if(!e.host)throw TypeError('No "host" provided');if("https:"===l.protocol){t_("Creating `tls.Socket`: %o",this.connectOpts);let g=this.connectOpts.servername||this.connectOpts.host;I=tL.connect({...this.connectOpts,servername:g&&tx.isIP(g)?void 0:g})}else t_("Creating `net.Socket`: %o",this.connectOpts),I=tx.connect(this.connectOpts);let n="function"==typeof this.proxyHeaders?this.proxyHeaders():{...this.proxyHeaders},c=tx.isIPv6(e.host)?`[${e.host}]`:e.host,i=`CONNECT ${c}:${e.port} HTTP/1.1\r
`;if(l.username||l.password){let g=`${decodeURIComponent(l.username)}:${decodeURIComponent(l.password)}`;n["Proxy-Authorization"]=`Basic ${Buffer.from(g).toString("base64")}`}for(let g of(n.Host=`${c}:${e.port}`,n["Proxy-Connection"]||(n["Proxy-Connection"]=this.keepAlive?"Keep-Alive":"close"),Object.keys(n)))i+=`${g}: ${n[g]}\r
`;let o=(t=I,new Promise((g,e)=>{let I=0,l=[];function n(){let i=t.read();i?function(i){l.push(i),I+=i.length;let o=Buffer.concat(l,I),s=o.indexOf("\r\n\r\n");if(-1===s){tT("have not received end of HTTP headers yet..."),n();return}let a=o.slice(0,s).toString("ascii").split("\r\n"),C=a.shift();if(!C)return t.destroy(),e(Error("No header received from proxy CONNECT response"));let d=C.split(" "),b=+d[1],Z=d.slice(2).join(" "),r={};for(let g of a){if(!g)continue;let I=g.indexOf(":");if(-1===I)return t.destroy(),e(Error(`Invalid header from proxy CONNECT response: "${g}"`));let l=g.slice(0,I).toLowerCase(),n=g.slice(I+1).trimStart(),c=r[l];"string"==typeof c?r[l]=[c,n]:Array.isArray(c)?c.push(n):r[l]=n}tT("got proxy server response: %o %o",C,r),c(),g({connect:{statusCode:b,statusText:Z,headers:r},buffered:o})}(i):t.once("readable",n)}function c(){t.removeListener("end",i),t.removeListener("error",o),t.removeListener("readable",n)}function i(){c(),tT("onend"),e(Error("Proxy connection ended before receiving CONNECT response"))}function o(g){c(),tT("onerror %o",g),e(g)}t.on("error",o),t.on("end",i),n()}));I.write(`${i}\r
`);let{connect:s,buffered:a}=await o;if(g.emit("proxyConnect",s),this.emit("proxyConnect",s,g),200===s.statusCode){if(g.once("socket",tM),e.secureEndpoint){t_("Upgrading socket connection to TLS");let g=e.servername||e.host;return tL.connect({...tO(e,"host","path","port"),socket:I,servername:tx.isIP(g)?void 0:g})}return I}I.destroy();let C=new tx.Socket({writable:!1});return C.readable=!0,g.once("socket",g=>{t_("Replaying proxy buffer for failed request"),tf()(g.listenerCount("data")>0),g.push(a),g.push(null)}),C}}function tM(g){g.resume()}function tO(g,...e){let t;let I={};for(t in g)e.includes(t)||(I[t]=g[t]);return I}function tP(g){let e;try{e=new gx.URL(g.url)}catch(e){return(0,d.Cf)(()=>{console.warn("[@sentry/node]: Invalid dsn or tunnel option, will not send any events. The tunnel option must be a full URL when used.")}),tU(g,()=>Promise.resolve({}))}let t="https:"===e.protocol,I=function(g,e){let{no_proxy:t}=process.env;if(!(t&&t.split(",").some(e=>g.host.endsWith(e)||g.hostname.endsWith(e))))return e}(e,g.proxy||(t?process.env.https_proxy:void 0)||process.env.http_proxy),l=t?tF:ek,n=void 0!==g.keepAlive&&g.keepAlive,c=I?new tj(I):new l.Agent({keepAlive:n,maxSockets:30,timeout:2e3}),i=function(g,e,t){let{hostname:I,pathname:l,port:n,protocol:c,search:i}=new gx.URL(g.url);return function(o){return new Promise((s,a)=>{var C;let d=(C=o.body,new tJ.Readable({read(){this.push(C),this.push(null)}})),b={...g.headers};o.body.length>32768&&(b["content-encoding"]="gzip",d=d.pipe((0,tw.createGzip)()));let Z=e.request({method:"POST",agent:t,headers:b,hostname:I,path:`${l}${i}`,port:n,protocol:c,ca:g.caCerts},g=>{g.on("data",()=>{}),g.on("end",()=>{}),g.setEncoding("utf8");let e=tK(g.headers["retry-after"],()=>null),t=tK(g.headers["x-sentry-rate-limits"],()=>null);s({statusCode:g.statusCode,headers:{"retry-after":e,"x-sentry-rate-limits":Array.isArray(t)?t[0]:t}})});Z.on("error",a),d.pipe(Z)})}}(g,tK(g.httpModule,()=>l),c);return tU(g,i)}tj.__initStatic();let tD=[ga(),gl(),gB(),eH(),gN(),g_(),ew(),gD(),g0(),g7(),eF(),ei(),g3()];function tq(g){let e=(0,Z.cu)();return[...tD,...(0,gF.x)([e,"access",g=>g.__SENTRY__,"optionalAccess",g=>g.integrations])||[]]}let t$=(0,u.pE)((0,u.Ep)(gR()));var t0=t(3234);function t2(){return process.env.NEXT_PHASE===t0.PHASE_PRODUCTION_BUILD}class t9 extends ts.Http{constructor(g){super({...g,tracing:!0})}}class t5 extends ts.OnUncaughtException{constructor(g){super({exitEvenIfOtherHandlersAreRegistered:!1,...g})}}let t3="RewriteFrames",t1=(0,ge._I)((g={})=>{let e=g.root,t=g.prefix||"app:///",I=g.iteratee||(g=>{if(!g.filename)return g;let I=/^[a-zA-Z]:\\/.test(g.filename)||g.filename.includes("\\")&&!g.filename.includes("/"),l=/^\//.test(g.filename);if(I||l){let l=I?g.filename.replace(/^[a-zA-Z]:/,"").replace(/\\/g,"/"):g.filename,n=e?function(g,e){g=gV(g).slice(1),e=gV(e).slice(1);let t=gy(g.split("/")),I=gy(e.split("/")),l=Math.min(t.length,I.length),n=l;for(let g=0;g<l;g++)if(t[g]!==I[g]){n=g;break}let c=[];for(let g=n;g<t.length;g++)c.push("..");return(c=c.concat(I.slice(n))).join("/")}(e,l):function(g,e){let t=gW(g)[2];return e&&t.slice(-1*e.length)===e&&(t=t.slice(0,t.length-e.length)),t}(l);g.filename=`${t}${n}`}return g});return{name:t3,setupOnce(){},processEvent(g){let e=g;return g.exception&&Array.isArray(g.exception.values)&&(e=function(g){try{return{...g,exception:{...g.exception,values:g.exception.values.map(g=>{var e;return{...g,...g.stacktrace&&{stacktrace:{...e=g.stacktrace,frames:e&&e.frames&&e.frames.map(g=>I(g))}}}})}}}catch(e){return g}}(e)),e}}}),t4=(0,ge.RN)(t3,t1),t8=global,t7=(0,ge._I)(g=>{let e=t8.__rewriteFramesDistDir__;if(e){let t=new RegExp(gh.resolve(e).replace(/(\/|\\)$/,"").replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d"));return t1({iteratee:g=>(g.filename=(0,gF.x)([g,"access",g=>g.filename,"optionalAccess",g=>g.replace,"call",g=>g(t,"app:///_next")]),g),...g})}return{name:t4.id,setupOnce:()=>{},processEvent:g=>g}});t2();let t6=!!process.env.VERCEL;function Ig(g){if(D(),t2())return;let e=[...tq(g).filter(g=>!["Http","OnUncaughtException"].includes(g.name)),t7(),new t9,new t5],t={environment:process.env.SENTRY_ENVIRONMENT||function(g){let e=g?process.env.NEXT_PUBLIC_VERCEL_ENV:process.env.VERCEL_ENV;return e?`vercel-${e}`:void 0}(!1)||"production",defaultIntegrations:e,...g,autoSessionTracking:!1};if((0,gg.s3)())return;$(t,"nextjs",["nextjs","node"]),function(g={}){gf.V.major>=14?function(){function g(){return c.getStore()}c||(c=new tb.AsyncLocalStorage),(0,Z.$b)({getCurrentHub:g,runWithAsyncContext:function(e,t){let I=g();if(I&&(0,gF.x)([t,"optionalAccess",g=>g.reuseExisting]))return e();let l=function(g){let e={};return(0,Z.uZ)(e,g),(0,Z.vi)(e)}(I);return c.run(l,()=>e())}})}():(0,Z.$b)({getCurrentHub:tC,runWithAsyncContext:td}),void 0===g.defaultIntegrations&&(g.defaultIntegrations=tq()),void 0===g.dsn&&process.env.SENTRY_DSN&&(g.dsn=process.env.SENTRY_DSN);let e=process.env.SENTRY_TRACES_SAMPLE_RATE;if(void 0===g.tracesSampleRate&&e){let t=parseFloat(e);isFinite(t)&&(g.tracesSampleRate=t)}if(void 0===g.release){let e=process.env.SENTRY_RELEASE?process.env.SENTRY_RELEASE:G.GLOBAL_OBJ.SENTRY_RELEASE&&G.GLOBAL_OBJ.SENTRY_RELEASE.id?G.GLOBAL_OBJ.SENTRY_RELEASE.id:process.env.GITHUB_SHA||process.env.COMMIT_REF||process.env.VERCEL_GIT_COMMIT_SHA||process.env.VERCEL_GITHUB_COMMIT_SHA||process.env.VERCEL_GITLAB_COMMIT_SHA||process.env.VERCEL_BITBUCKET_COMMIT_SHA||process.env.ZEIT_GITHUB_COMMIT_SHA||process.env.ZEIT_GITLAB_COMMIT_SHA||process.env.ZEIT_BITBUCKET_COMMIT_SHA||process.env.CF_PAGES_COMMIT_SHA||void 0;void 0!==e?g.release=e:g.autoSessionTracking=!1}void 0===g.environment&&process.env.SENTRY_ENVIRONMENT&&(g.environment=process.env.SENTRY_ENVIRONMENT),void 0===g.autoSessionTracking&&void 0!==g.dsn&&(g.autoSessionTracking=!0),void 0===g.instrumenter&&(g.instrumenter="sentry");let t={...g,stackParser:(0,u.Sq)(g.stackParser||t$),integrations:(0,ge.m8)(g),transport:g.transport||tP};if(function(g,e){!0===e.debug&&(b.X?d.kg.enable():(0,d.Cf)(()=>{console.warn("[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.")})),(0,gg.nZ)().update(e.initialScope);let t=new g(e);(function(g){let e=(0,Z.Gd)().getStackTop();e.client=g,e.scope.setClient(g)})(t),t.init?t.init():t.setupIntegrations&&t.setupIntegrations()}(g.clientClass||tN,t),g.autoSessionTracking&&((0,gg.yj)(),process.on("beforeExit",()=>{let g=(0,Z.aF)().getSession();g&&!["exited","crashed"].includes(g.status)&&(0,gg.TM)()})),function(){if(!["false","n","no","off","0"].includes((process.env.SENTRY_USE_ENVIRONMENT||"").toLowerCase())){let g=process.env.SENTRY_TRACE,e=process.env.SENTRY_BAGGAGE,t=(0,gk.pT)(g,e);(0,gg.nZ)().setPropagationContext(t)}}(),g.spotlight){let e=(0,gg.s3)();if(e&&e.addIntegration){for(let g of e.getOptions().integrations)e.addIntegration(g);e.addIntegration(eO({sidecarUrl:"string"==typeof g.spotlight?g.spotlight:void 0}))}}}(t);let I=g=>"transaction"===g.type&&"/404"===g.transaction?null:g;I.id="NextServer404TransactionFilter";let l=(0,gg.nZ)();l.setTag("runtime","node"),t6&&l.setTag("vercel",!0),l.addEventProcessor(I)}},826:(g,e,t)=>{t.d(e,{q:()=>Z});var I=t(15);function l(g){let e=(0,I.x)(g);return null==e||e}var n=t(7310),c=t(8846),i=t(7676),o=t(2615),s=t(495),a=t(3914);function C(g,...e){o.kg.log(`[ANR] ${g}`,...e)}async function d(g){let e={message:"ANR"},t={};for(let I of g.getEventProcessors()){if(null===e)break;e=await I(e,t)}return(0,I.x)([e,"optionalAccess",g=>g.contexts])||{}}g=t.hmd(g);let b=(0,c._I)((g={})=>({name:"Anr",setupOnce(){},setup(e){if(a.V.major<16||16===a.V.major&&a.V.minor<17)throw Error("ANR detection requires Node 16.17.0 or later");setImmediate(()=>r(e,g))}})),Z=(0,c.RN)("Anr",b);async function r(e,I){let c=await d(e),a=e.getDsn();if(!a)return;l([c,"access",g=>g.app,"optionalAccess",g=>delete g.app_memory]),l([c,"access",g=>g.device,"optionalAccess",g=>delete g.free_memory]);let b=e.getOptions(),Z=e.getSdkMetadata()||{};Z.sdk&&(Z.sdk.integrations=b.integrations.map(g=>g.name));let r={debug:o.kg.isEnabled(),dsn:a,environment:b.environment||"production",release:b.release,dist:b.dist,sdkMetadata:Z,appRootPath:I.appRootPath,pollInterval:I.pollInterval||50,anrThreshold:I.anrThreshold||5e3,captureStackTrace:!!I.captureStackTrace,staticTags:I.staticTags||{},contexts:c};if(r.captureStackTrace){let g=t(1405);g.url()||g.open(0)}let{Worker:G}=(0,s.l$)(g,"worker_threads"),m=new G(new n.URL("data:application/javascript;base64,"),{workerData:r});process.on("exit",()=>{m.terminate()});let u=setInterval(()=>{try{let g=(0,i.nZ)().getSession(),e=g?{...g,toJSON:void 0}:void 0;m.postMessage({session:e})}catch(g){}},r.pollInterval);u.unref(),m.on("message",g=>{"session-ended"===g&&(C("ANR event sent from ANR worker. Clearing session in this thread."),(0,i.nZ)().setSession(void 0))}),m.once("error",g=>{clearInterval(u),C("ANR worker error",g)}),m.once("exit",g=>{clearInterval(u),C("ANR worker exit",g)}),m.unref()}},3914:(g,e,t)=>{t.d(e,{V:()=>I});let I=(0,t(3831).J4)(process.versions.node)},15:(g,e,t)=>{t.d(e,{x:()=>I});function I(g){let e;let t=g[0],I=1;for(;I<g.length;){let l=g[I],n=g[I+1];if(I+=2,("optionalAccess"===l||"optionalCall"===l)&&null==t)return;"access"===l||"optionalAccess"===l?(e=t,t=n(t)):("call"===l||"optionalCall"===l)&&(t=n((...g)=>t.call(e,...g)),e=void 0)}return t}},495:(g,e,t)=>{function I(g,e){return g.require(e)}function l(e){let t;try{t=I(g,e)}catch(g){}try{let{cwd:l}=I(g,"process");t=I(g,`${l()}/node_modules/${e}`)}catch(g){}return t}t.d(e,{$y:()=>l,l$:()=>I}),g=t.hmd(g)},3234:(g,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),function(g,e){for(var t in e)Object.defineProperty(g,t,{enumerable:!0,get:e[t]})}(e,{MODERN_BROWSERSLIST_TARGET:function(){return I.default},COMPILER_NAMES:function(){return l},INTERNAL_HEADERS:function(){return n},COMPILER_INDEXES:function(){return c},PHASE_EXPORT:function(){return i},PHASE_PRODUCTION_BUILD:function(){return o},PHASE_PRODUCTION_SERVER:function(){return s},PHASE_DEVELOPMENT_SERVER:function(){return a},PHASE_TEST:function(){return C},PHASE_INFO:function(){return d},PAGES_MANIFEST:function(){return b},APP_PATHS_MANIFEST:function(){return Z},APP_PATH_ROUTES_MANIFEST:function(){return r},BUILD_MANIFEST:function(){return G},APP_BUILD_MANIFEST:function(){return m},FUNCTIONS_CONFIG_MANIFEST:function(){return u},SUBRESOURCE_INTEGRITY_MANIFEST:function(){return B},NEXT_FONT_MANIFEST:function(){return A},EXPORT_MARKER:function(){return h},EXPORT_DETAIL:function(){return p},PRERENDER_MANIFEST:function(){return W},ROUTES_MANIFEST:function(){return V},IMAGES_MANIFEST:function(){return y},SERVER_FILES_MANIFEST:function(){return H},DEV_CLIENT_PAGES_MANIFEST:function(){return R},MIDDLEWARE_MANIFEST:function(){return X},DEV_MIDDLEWARE_MANIFEST:function(){return Y},REACT_LOADABLE_MANIFEST:function(){return v},FONT_MANIFEST:function(){return S},SERVER_DIRECTORY:function(){return N},CONFIG_FILES:function(){return K},BUILD_ID_FILE:function(){return F},BLOCKED_PAGES:function(){return J},CLIENT_PUBLIC_FILES_PATH:function(){return w},CLIENT_STATIC_FILES_PATH:function(){return U},STRING_LITERAL_DROP_BUNDLE:function(){return k},NEXT_BUILTIN_DOCUMENT:function(){return z},BARREL_OPTIMIZATION_PREFIX:function(){return f},CLIENT_REFERENCE_MANIFEST:function(){return x},SERVER_REFERENCE_MANIFEST:function(){return L},MIDDLEWARE_BUILD_MANIFEST:function(){return Q},MIDDLEWARE_REACT_LOADABLE_MANIFEST:function(){return E},CLIENT_STATIC_FILES_RUNTIME_MAIN:function(){return T},CLIENT_STATIC_FILES_RUNTIME_MAIN_APP:function(){return _},APP_CLIENT_INTERNALS:function(){return j},CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH:function(){return M},CLIENT_STATIC_FILES_RUNTIME_AMP:function(){return O},CLIENT_STATIC_FILES_RUNTIME_WEBPACK:function(){return P},CLIENT_STATIC_FILES_RUNTIME_POLYFILLS:function(){return D},CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL:function(){return q},EDGE_RUNTIME_WEBPACK:function(){return $},STATIC_PROPS_ID:function(){return gg},SERVER_PROPS_ID:function(){return ge},GOOGLE_FONT_PROVIDER:function(){return gt},OPTIMIZED_FONT_PROVIDERS:function(){return gI},DEFAULT_SERIF_FONT:function(){return gl},DEFAULT_SANS_SERIF_FONT:function(){return gn},STATIC_STATUS_PAGES:function(){return gc},TRACE_OUTPUT_VERSION:function(){return gi},TURBO_TRACE_DEFAULT_MEMORY_LIMIT:function(){return go},RSC_MODULE_TYPES:function(){return gs},EDGE_UNSUPPORTED_NODE_APIS:function(){return ga},SYSTEM_ENTRYPOINTS:function(){return gC}});let I=t(383)._(t(5801)),l={client:"client",server:"server",edgeServer:"edge-server"},n=["x-invoke-error","x-invoke-output","x-invoke-path","x-invoke-query","x-invoke-status","x-middleware-invoke"],c={[l.client]:0,[l.server]:1,[l.edgeServer]:2},i="phase-export",o="phase-production-build",s="phase-production-server",a="phase-development-server",C="phase-test",d="phase-info",b="pages-manifest.json",Z="app-paths-manifest.json",r="app-path-routes-manifest.json",G="build-manifest.json",m="app-build-manifest.json",u="functions-config-manifest.json",B="subresource-integrity-manifest",A="next-font-manifest",h="export-marker.json",p="export-detail.json",W="prerender-manifest.json",V="routes-manifest.json",y="images-manifest.json",H="required-server-files.json",R="_devPagesManifest.json",X="middleware-manifest.json",Y="_devMiddlewareManifest.json",v="react-loadable-manifest.json",S="font-manifest.json",N="server",K=["next.config.js","next.config.mjs"],F="BUILD_ID",J=["/_document","/_app","/_error"],w="public",U="static",k="__NEXT_DROP_CLIENT_FILE__",z="__NEXT_BUILTIN_DOCUMENT__",f="__barrel_optimize__",x="client-reference-manifest",L="server-reference-manifest",Q="middleware-build-manifest",E="middleware-react-loadable-manifest",T="main",_=""+T+"-app",j="app-pages-internals",M="react-refresh",O="amp",P="webpack",D="polyfills",q=Symbol(D),$="edge-runtime-webpack",gg="__N_SSG",ge="__N_SSP",gt="https://fonts.googleapis.com/",gI=[{url:gt,preconnect:"https://fonts.gstatic.com"},{url:"https://use.typekit.net",preconnect:"https://use.typekit.net"}],gl={name:"Times New Roman",xAvgCharWidth:821,azAvgWidth:854.3953488372093,unitsPerEm:2048},gn={name:"Arial",xAvgCharWidth:904,azAvgWidth:934.5116279069767,unitsPerEm:2048},gc=["/500"],gi=1,go=6e3,gs={client:"client",server:"server"},ga=["clearImmediate","setImmediate","BroadcastChannel","ByteLengthQueuingStrategy","CompressionStream","CountQueuingStrategy","DecompressionStream","DomException","MessageChannel","MessageEvent","MessagePort","ReadableByteStreamController","ReadableStreamBYOBRequest","ReadableStreamDefaultController","TransformStreamDefaultController","WritableStreamDefaultController"],gC=new Set([T,M,O,_]);("function"==typeof e.default||"object"==typeof e.default&&null!==e.default)&&void 0===e.default.__esModule&&(Object.defineProperty(e.default,"__esModule",{value:!0}),Object.assign(e.default,e),g.exports=e.default)},5801:g=>{g.exports=["chrome 64","edge 79","firefox 67","opera 51","safari 12"]}};
//# sourceMappingURL=59.js.map